name: Build and test oc.user images linux amd64

on:
  push:
    branches: [ main ]
  repository_dispatch:
    types: [
      dispatch-from-pulse,
      dispatch-from-cups,
      dispatch-from-oc.software,
      dispatch-from-file-service,
      dispatch-from-printer-service
    ]
jobs:
  update_image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        BASE_IMAGE_RELEASE: [18.04, 20.04]
    steps: 
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Checkout submodules
      run: git submodule update --init --recursive --remote

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Run Buildx oc.user.${{ matrix.BASE_IMAGE_RELEASE }}
      run: |
          echo "docker" > TARGET_MODE
          make version
     
    - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64, linux/arm64
          push: true
          build-args: |
            TAG=dev
            BASE_IMAGE_RELEASE=${{ matrix.BASE_IMAGE_RELEASE }}
            BASE_IMAGE=abcdesktopio/oc.software.${{ matrix.BASE_IMAGE_RELEASE }}
          tags: |
            abcdesktopio/oc.user.${{ matrix.BASE_IMAGE_RELEASE }}:dev
            
            
    - name: Run and test docker image abcdesktopio/oc.user.${{ matrix.BASE_IMAGE_RELEASE }}:dev
      run: |
        ./make-test.sh abcdesktopio/oc.user.${{ matrix.BASE_IMAGE_RELEASE }}:dev
        
    - name: Push image abcdesktopio/oc.user.${{ matrix.BASE_IMAGE_RELEASE }}:dev
      run: |
        docker push abcdesktopio/oc.user.${{ matrix.BASE_IMAGE_RELEASE }}:dev
 
    - name: Run Buildx oc.user.kubernetes.${{ matrix.BASE_IMAGE_RELEASE }}
      run: |
         echo "kubernetes" > TARGET_MODE
         make version
         
    - name: Build and push kubernetes image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64, linux/arm64
          push: true
          build-args: |
            TAG=dev
            BASE_IMAGE_RELEASE=${{ matrix.BASE_IMAGE_RELEASE }}
            BASE_IMAGE=abcdesktopio/oc.software.${{ matrix.BASE_IMAGE_RELEASE }}
          tags: |
            abcdesktopio/oc.user.kubernetes.${{ matrix.BASE_IMAGE_RELEASE }}:dev
        
    - name: Push image abcdesktopio/oc.user.kubernetes.${{ matrix.BASE_IMAGE_RELEASE }}:dev
      run: |
        docker push abcdesktopio/oc.user.kubernetes.${{ matrix.BASE_IMAGE_RELEASE }}:dev
        
    # - name: Update platform webhook pull
    #  run: curl -X POST -u "${{ secrets.WEBHOOK_USERNAME }}:${{ secrets.WEBHOOK_PASSWORD }}" -d "abcdesktopio/oc.user.${{ matrix.BASE_IMAGE_RELEASE }}:dev"  "${{ secrets.WEBHOOK_URL }}/kubernetes/pull"
      

  dispatch_oc_user_debuger:
    runs-on: ubuntu-latest
    needs: update_image
    steps:
      - name: Dispatch repository oc.user.debuger
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.TOKEN_DISPATCH }}
          repository: abcdesktopio/oc.user.debuger
          event-type: dispatch-from-oc.user

      - name: Dispatch repository oc.user.nvidia
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.TOKEN_DISPATCH }}
          repository: abcdesktopio/oc.user.nvidia
          event-type: dispatch-from-oc.user

      - name: Dispatch repository oc.user.tunnel
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.TOKEN_DISPATCH }}
          repository: abcdesktopio/oc.user.tunnel
          event-type: dispatch-from-oc.user
