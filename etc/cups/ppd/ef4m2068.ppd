*PPD-Adobe: "4.3"
*% Copyright 1993-2006 Electronics for Imaging, Inc.  All Rights Reserved.
*% *********
*% EFI Information Block
*%
*%EFFileVersion: 2.0
*%
*% *********
*FormatVersion: "4.3"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English
*FileVersion: "1.0"
*PSVersion: "(3017.102) 1"
*PCFileName: "EF4M2068.PPD"
*Product: "(Canon imagePRESS Server Q1 UK)"
*ShortNickName: "Canon iPR S"
*NickName: "Canon iPR Server Q1 V1.0(UK)"
*ModelName: "Canon iPR Server Q1 V1.0"
*Manufacturer: "Canon"

*% ========== EFI Specific Informational Keys ==========

*%EFVersion 2.0: True
*%EFVersion 3.0: True
*%EFDefaultFacePrinting: down
*%EFMixedPageSizeSupport: True
*%EFInlineMergeTray: None
*%EFPpmBW: "51"
*%EFIgnoreErrors: "1"
*%EFIgnoreErr0: "Energy Saver Mode"
*%EFPpmColor: "51"
*%EFISpecialOption *EF9999Copies: True
*%EFISpecialOption *EFForceJMDefaults: True
*%EFISpecialOption *EFHideClrCstm: True
*%EFISpecialOption *EFIAuthenticateWithLDAP: True
*%EFISpecialOption *EFShowAdobePageSize: True
*%EFISpecialOption *EFVDPRangesEnable: True
*%EFISpecialOption *FieryDriver2: True

*%EFISpecialOption *EFBillingCode: True
*%EFISpecialOption *EFClientJobID: True

*% ========== Driver Information ==========

*%EFIPropPage EFPPFieryPrint/Fiery Printing:True
*%EFIPropPage EFPPPostscript/PostScript:True
*%EFIPropPage EFPPFonts/Fonts:True
*%EFIPropPage EFPPInstallableOptions/Configuration:True | Prop
*%EFIPropPage EFPPAbout/About:True

*%EFIGroupName EFScrollPane/EFScrollPane:True
*%EFIParent EFScrollPane/EFPPFieryPrint:True | Scrollpane
*%EFIGroupName FPJobInfo/Job Info:True
*%EFIParent FPJobInfo/EFScrollPane:True | Rolldown
*%EFIGroupName FPPaperSource/Media:True
*%EFIParent FPPaperSource/EFScrollPane:True | Rolldown
*%EFIGroupName FPLayout/Layout:True
*%EFIParent FPLayout/EFScrollPane:True | Rolldown
*%EFIGroupName FPColorWise/Color:True
*%EFIParent FPColorWise/EFScrollPane:True | Rolldown
*%EFIGroupName FPImage/Image:True
*%EFIParent FPImage/EFScrollPane:True | Rolldown
*%EFIGroupName FPFinishing/Finishing:True
*%EFIParent FPFinishing/EFScrollPane:True | Rolldown
*%EFIGroupName FPVDP/VDP:True
*%EFIParent FPVDP/EFScrollPane:True | Rolldown
*%EFIGroupName FPStamping/Stamping:True
*%EFIParent FPStamping/EFScrollPane:True | Rolldown
*%EFIGroupName EFPPInstallableOptions/Configuration:True

*%EFShortcut *EF_COPIES
*%EFShortcut *EF_LAYOUT
*%EFShortcut *Duplex
*%EFShortcut *EFSort
*%EFShortcut *EFCopierBooklet
*%EFShortcut *InputSlot
*%EFShortcut *EFStapler

*% ========== EFI Jobnotes ==========

*%EFIFlags *Notes1 Admin|Column|Command|Impose|Spooler
*%EFIGroup *Notes1 FPJobInfo/Job Info
*%EFIJobNote *Notes1/Notes:31:
*%Notes1: "%%EFICustom1: <*Notes1> "

*%EFIFlags *Instruct Column|Command|Impose|Spooler
*%EFIGroup *Instruct FPJobInfo/Job Info
*%EFIJobNote *Instruct/Instructions:127:
*%Instruct: "%%EFICustom3: <*Instruct> "

*%EFIFlags *EFPersUserID 
*%EFIGroup *EFPersUserID FPJobInfo/Job Info
*%EFIJobNote *EFPersUserID/Department ID:7:Numeric
*%EFPersUserID: " /XJXsetUserID where { pop (<*EFPersUserID>) XJXsetUserID} if "

*%EFIFlags *EFIPrintTime Admin|Column|Command|Impose
*%EFIGroup *EFIPrintTime FPJobInfo/Job Info
*%EFIJobNote *EFIPrintTime/Schedule Printing:31:

*%EFIFlags *EFMailboxName Command|Impose|Rerip
*%EFIGroup *EFMailboxName FPJobInfo/Job Info
*%EFIJobNote *EFMailboxName/File Name(for Mail Box / Form Store):128:
*%EFMailboxName: " /XJXsetMailNameString where { pop (<*EFMailboxName>) XJXsetMailNameString} if "

*%EFIFlags *EFPersUserPWD 
*%EFIGroup *EFPersUserPWD FPJobInfo/Job Info
*%EFIJobNote *EFPersUserPWD/Department Password:7:Numeric | Password
*%EFPersUserPWD: " /XJXsetUserPWD where { pop (<*EFPersUserPWD>) XJXsetUserPWD} if "

*%EFIFlags *EFSecuredPasswd 
*%EFIGroup *EFSecuredPasswd FPJobInfo/Job Info
*%EFIJobNote *EFSecuredPasswd/Secured Password:7:Numeric | Password | SecPrint
*%EFSecuredPasswd: " /XJXsetSecurePasswd where { pop (<*EFSecuredPasswd>) XJXsetSecurePasswd } if "

*%EFIFlags *EFVDPFilePath Column|Command|Impose|MacCW|Spooler
*%EFIGroup *EFVDPFilePath FPVDP/VDP
*%EFIJobNote *EFVDPFilePath/File Search Path:128:

*% ========== EFI Range ==========

*%EFIFlags *EFImageBackX Column|CommandEx|Impose|MacIS|Rerip|Spooler|NoUIPageOverride
*%EFIGroup *EFImageBackX FPFinishing/Finishing
*%EFIRange *EFImageBackX/Back X:(-99999;99999;1;0): " userdict /XJXEFIsetpageproperties known { << /XJXSetImageBackX [<*EFImageBackX> ] >> XJXEFIsetpageproperties } if "
*%EFIKeyAttribute [EFImageBackX][polymorphic:yes]

*%EFIFlags *EFImageBackY Column|CommandEx|Impose|MacIS|Rerip|Spooler|NoUIPageOverride
*%EFIGroup *EFImageBackY FPFinishing/Finishing
*%EFIRange *EFImageBackY/Back Y:(-99999;99999;1;0): " userdict /XJXEFIsetpageproperties known { << /XJXSetImageBackY [<*EFImageBackY> ] >> XJXEFIsetpageproperties } if "
*%EFIKeyAttribute [EFImageBackY][polymorphic:yes]

*%EFIFlags *EFImageFrontX Column|CommandEx|Impose|MacIS|Rerip|Spooler|NoUIPageOverride
*%EFIGroup *EFImageFrontX FPFinishing/Finishing
*%EFIRange *EFImageFrontX/Front X:(-99999;99999;1;0): " userdict /XJXEFIsetpageproperties known { << /XJXSetImageFrontX [<*EFImageFrontX> ] >> XJXEFIsetpageproperties } if "
*%EFIKeyAttribute [EFImageFrontX][polymorphic:yes]

*%EFIFlags *EFImageFrontY Column|CommandEx|Impose|MacIS|Rerip|Spooler|NoUIPageOverride
*%EFIGroup *EFImageFrontY FPFinishing/Finishing
*%EFIRange *EFImageFrontY/Front Y:(-99999;99999;1;0): " userdict /XJXEFIsetpageproperties known { << /XJXSetImageFrontY [<*EFImageFrontY> ] >> XJXEFIsetpageproperties } if "
*%EFIKeyAttribute [EFImageFrontY][polymorphic:yes]

*%EFIFlags *EFGutter Column|Command
*%EFIGroup *EFGutter FPFinishing/Finishing
*%EFIRange *EFGutter/Gutter (mm):(0;50;1;0): "/XJXsetGutter where { pop <*EFGutter> XJXsetGutter } if"
*%EFIKeyAttribute [EFGutter][polymorphic:yes]

*%EFIFlags *EFShiftSort Column|Impose|Spooler
*%EFIGroup *EFShiftSort FPFinishing/Finishing
*%EFIRange *EFShiftSort/Number of Copies for Offset:(1;9999;1;1): " /XJXsetShiftSort where { pop <*EFShiftSort> XJXsetShiftSort } if "
*%EFIKeyAttribute [EFShiftSort][polymorphic:yes]

*%EFIFlags *EFScale Column|Command|Rerip|Spooler
*%EFIGroup *EFScale FPLayout/Layout
*%EFIRange *EFScale/Scale:(25;400;1;100): " /XJXSetEFScale where { pop <*EFScale> XJXSetEFScale} if "
*%EFIKeyAttribute [EFScale][polymorphic:yes]

*%EFIFlags *EFCorrWidth Column|Command
*%EFIGroup *EFCorrWidth FPLayout/Layout
*%EFIRange *EFCorrWidth/Creep Correction Width (1=1/100mm):(0;1000;1;0): " /XJXsetCorrectionWidth where { pop <*EFCorrWidth> XJXsetCorrectionWidth } if "
*%EFIKeyAttribute [EFCorrWidth][polymorphic:yes]

*%EFIFlags *EFTabPosition Column|Command|Spooler
*%EFIGroup *EFTabPosition FPPaperSource/Media
*%EFIRange *EFTabPosition/Select Tab Position:(0;254;1;0): "/XJXsetTabShift where { pop <*EFTabPosition> XJXsetTabShift} if"
*%EFIKeyAttribute [EFTabPosition][polymorphic:yes]

*%EFIFlags *EFCopyNumStart Column|Command
*%EFIGroup *EFCopyNumStart FPStamping/Stamping
*%EFIRange *EFCopyNumStart/Starting Number:(1;9999;1;1): " /XJXsetSerialNumberStart where { pop <*EFCopyNumStart> XJXsetSerialNumberStart } if "
*%EFIKeyAttribute [EFCopyNumStart][polymorphic:yes]

*%EFIFlags *EFMailboxNum Command|Impose|Rerip|Spooler
*%EFIGroup *EFMailboxNum FPJobInfo/Job Info
*%EFIRange *EFMailboxNum/Select Mailbox:(0;99;1;0): " /XJXsetMailboxString where { pop (<*EFMailboxNum>) XJXsetMailboxString} if "
*%EFIKeyAttribute [EFMailboxNum][polymorphic:yes]

*% ========== Installable options ==========

*OpenGroup: InstallableOptions/Options Installed
*%EFIFlags *EFGAFeaturesOpt Command
*%EFIGroup *EFGAFeaturesOpt EFPPInstallableOptions/Configuration
*OpenUI *EFGAFeaturesOpt/GA Package:PickOne
*DefaultEFGAFeaturesOpt: GA1
*EFGAFeaturesOpt GA1/Fiery Graphic Arts Package: ""
*EFGAFeaturesOpt GA2/Fiery Graphic Arts Package Premium Edition: ""
*?EFGAFeaturesOpt: " userdict /FieryXJdict known {
     FieryXJdict /getfierysysdict known
     {(GA_ENABLED) FieryXJdict /getfierysysdict get exec }
     { (False) }
     ifelse 
     } { (False) } ifelse 
                   dup () eq { (False) } if
     = flush "
*End
*CloseUI: *EFGAFeaturesOpt

*%EFIFlags *EFFinisher Command|Impose
*%EFIGroup *EFFinisher EFPPInstallableOptions/Configuration
*OpenUI *EFFinisher/Sorter and Stapler:PickOne
*DefaultEFFinisher: False
*EFFinisher False/Not Installed: ""
*EFFinisher Finisher/Finisher-AA1: ""
*EFFinisher Finisher3/Saddle Finisher-AA2: ""
*?EFFinisher: " userdict /FieryXJdict known {
FieryXJdict /getfierysysdict known
{(EFFINISHER) FieryXJdict /getfierysysdict get exec }
{ (False) }
ifelse
} { (False) } ifelse
= flush "
*End
*CloseUI: *EFFinisher

*%EFIFlags *EFPaperDeckOpt Command|Impose|Rerip|Spooler
*%EFIGroup *EFPaperDeckOpt EFPPInstallableOptions/Configuration
*OpenUI *EFPaperDeckOpt/Paper Source Option:PickOne
*DefaultEFPaperDeckOpt: False
*EFPaperDeckOpt False/Not Installed: ""
*EFPaperDeckOpt Option3/Paper Deck-AA1: ""
*EFPaperDeckOpt Option4/Paper Deck-AB1: ""
*?EFPaperDeckOpt: " userdict /FieryXJdict known {
FieryXJdict /getfierysysdict known
{(EFPAPERDECKOPT) FieryXJdict /getfierysysdict get exec }
{ (False) }
ifelse
} { (False) } ifelse
= flush "
*End
*CloseUI: *EFPaperDeckOpt

*%EFIFlags *EFPunchOpt Command|Impose|Rerip|Spooler
*%EFIGroup *EFPunchOpt EFPPInstallableOptions/Configuration
*OpenUI *EFPunchOpt/Punch Unit Option:Boolean
*DefaultEFPunchOpt: False
*EFPunchOpt False/Not Installed: ""
*EFPunchOpt True/Punch Unit: ""
*?EFPunchOpt:  " userdict /FieryXJdict known {
FieryXJdict /getfierysysdict known
{(EFPUNCHOPT) FieryXJdict /getfierysysdict get exec }
{ (False) }
ifelse
} { (False) } ifelse
= flush "
*End
*CloseUI: *EFPunchOpt

*CloseGroup: InstallableOptions

*% ========== UIConstraints ==========

*UIConstraints: *EFBkCover *EFStapler UStitch
*UIConstraints: *EFStapler UStitch *EFBkCover

*UIConstraints: *EFBlkOvpCtrl TEXTGRAPHICS *EFSeparations True
*UIConstraints: *EFSeparations True *EFBlkOvpCtrl TEXTGRAPHICS
*UIConstraints: *EFBlkOvpCtrl TEXTONLY *EFSeparations True
*UIConstraints: *EFSeparations True *EFBlkOvpCtrl TEXTONLY

*UIConstraints: *EFCopierBooklet *EFBkCover Blank
*UIConstraints: *EFBkCover Blank *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *EFBkCover Side1
*UIConstraints: *EFBkCover Side1 *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *EFBkCover Side2
*UIConstraints: *EFBkCover Side2 *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *EFBkCover Both
*UIConstraints: *EFBkCover Both *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *EFMediaInterlv Blank
*UIConstraints: *EFMediaInterlv Blank *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *EFMediaInterlv Printed
*UIConstraints: *EFMediaInterlv Printed *EFCopierBooklet
*UIConstraints: *EFCopierBooklet False *EFUseCreepCorr Device
*UIConstraints: *EFUseCreepCorr Device *EFCopierBooklet False
*UIConstraints: *EFCopierBooklet False *EFUseCreepCorr Automatic
*UIConstraints: *EFUseCreepCorr Automatic *EFCopierBooklet False

*UIConstraints: *EFCopierBooklet False *EFUseCreepCorr Manual
*UIConstraints: *EFUseCreepCorr Manual *EFCopierBooklet False

*UIConstraints: *EFCopierMode ErrorDiffusion *EFHTScreen AppDef
*UIConstraints: *EFHTScreen AppDef *EFCopierMode ErrorDiffusion
*UIConstraints: *EFCopierMode ErrorDiffusion *EFHTScreen Newsprint
*UIConstraints: *EFHTScreen Newsprint *EFCopierMode ErrorDiffusion
*UIConstraints: *EFCopierMode ErrorDiffusion *EFHTScreen Screen1
*UIConstraints: *EFHTScreen Screen1 *EFCopierMode ErrorDiffusion
*UIConstraints: *EFCopierMode ErrorDiffusion *EFHTScreen Screen2
*UIConstraints: *EFHTScreen Screen2 *EFCopierMode ErrorDiffusion
*UIConstraints: *EFCopierMode ErrorDiffusion *EFHTScreen Screen3
*UIConstraints: *EFHTScreen Screen3 *EFCopierMode ErrorDiffusion
*UIConstraints: *EFCopierMode Gradation *EFHTScreen AppDef
*UIConstraints: *EFHTScreen AppDef *EFCopierMode Gradation
*UIConstraints: *EFCopierMode Gradation *EFHTScreen Newsprint
*UIConstraints: *EFHTScreen Newsprint *EFCopierMode Gradation
*UIConstraints: *EFCopierMode Gradation *EFHTScreen Screen1
*UIConstraints: *EFHTScreen Screen1 *EFCopierMode Gradation
*UIConstraints: *EFCopierMode Gradation *EFHTScreen Screen2
*UIConstraints: *EFHTScreen Screen2 *EFCopierMode Gradation
*UIConstraints: *EFCopierMode Gradation *EFHTScreen Screen3
*UIConstraints: *EFHTScreen Screen3 *EFCopierMode Gradation
*UIConstraints: *EFCopierMode Pattern1 *EFHTScreen AppDef
*UIConstraints: *EFHTScreen AppDef *EFCopierMode Pattern1
*UIConstraints: *EFCopierMode Pattern1 *EFHTScreen Newsprint
*UIConstraints: *EFHTScreen Newsprint *EFCopierMode Pattern1
*UIConstraints: *EFCopierMode Pattern1 *EFHTScreen Screen1
*UIConstraints: *EFHTScreen Screen1 *EFCopierMode Pattern1
*UIConstraints: *EFCopierMode Pattern1 *EFHTScreen Screen2
*UIConstraints: *EFHTScreen Screen2 *EFCopierMode Pattern1
*UIConstraints: *EFCopierMode Pattern1 *EFHTScreen Screen3
*UIConstraints: *EFHTScreen Screen3 *EFCopierMode Pattern1
*UIConstraints: *EFCopierMode Pattern2 *EFHTScreen AppDef
*UIConstraints: *EFHTScreen AppDef *EFCopierMode Pattern2
*UIConstraints: *EFCopierMode Pattern2 *EFHTScreen Newsprint
*UIConstraints: *EFHTScreen Newsprint *EFCopierMode Pattern2
*UIConstraints: *EFCopierMode Pattern2 *EFHTScreen Screen1
*UIConstraints: *EFHTScreen Screen1 *EFCopierMode Pattern2
*UIConstraints: *EFCopierMode Pattern2 *EFHTScreen Screen2
*UIConstraints: *EFHTScreen Screen2 *EFCopierMode Pattern2
*UIConstraints: *EFCopierMode Pattern2 *EFHTScreen Screen3
*UIConstraints: *EFHTScreen Screen3 *EFCopierMode Pattern2
*UIConstraints: *EFCopierMode Pattern3 *EFHTScreen AppDef
*UIConstraints: *EFHTScreen AppDef *EFCopierMode Pattern3
*UIConstraints: *EFCopierMode Pattern3 *EFHTScreen Newsprint
*UIConstraints: *EFHTScreen Newsprint *EFCopierMode Pattern3
*UIConstraints: *EFCopierMode Pattern3 *EFHTScreen Screen1
*UIConstraints: *EFHTScreen Screen1 *EFCopierMode Pattern3
*UIConstraints: *EFCopierMode Pattern3 *EFHTScreen Screen2
*UIConstraints: *EFHTScreen Screen2 *EFCopierMode Pattern3
*UIConstraints: *EFCopierMode Pattern3 *EFHTScreen Screen3
*UIConstraints: *EFHTScreen Screen3 *EFCopierMode Pattern3
*UIConstraints: *EFCopierMode Pattern4 *EFHTScreen AppDef
*UIConstraints: *EFHTScreen AppDef *EFCopierMode Pattern4
*UIConstraints: *EFCopierMode Pattern4 *EFHTScreen Newsprint
*UIConstraints: *EFHTScreen Newsprint *EFCopierMode Pattern4
*UIConstraints: *EFCopierMode Pattern4 *EFHTScreen Screen1
*UIConstraints: *EFHTScreen Screen1 *EFCopierMode Pattern4
*UIConstraints: *EFCopierMode Pattern4 *EFHTScreen Screen2
*UIConstraints: *EFHTScreen Screen2 *EFCopierMode Pattern4
*UIConstraints: *EFCopierMode Pattern4 *EFHTScreen Screen3
*UIConstraints: *EFHTScreen Screen3 *EFCopierMode Pattern4
*UIConstraints: *EFCopierMode Pattern5 *EFHTScreen AppDef
*UIConstraints: *EFHTScreen AppDef *EFCopierMode Pattern5
*UIConstraints: *EFCopierMode Pattern5 *EFHTScreen Newsprint
*UIConstraints: *EFHTScreen Newsprint *EFCopierMode Pattern5
*UIConstraints: *EFCopierMode Pattern5 *EFHTScreen Screen1
*UIConstraints: *EFHTScreen Screen1 *EFCopierMode Pattern5
*UIConstraints: *EFCopierMode Pattern5 *EFHTScreen Screen2
*UIConstraints: *EFHTScreen Screen2 *EFCopierMode Pattern5
*UIConstraints: *EFCopierMode Pattern5 *EFHTScreen Screen3
*UIConstraints: *EFHTScreen Screen3 *EFCopierMode Pattern5
*UIConstraints: *EFCopierMode Pattern6 *EFHTScreen AppDef
*UIConstraints: *EFHTScreen AppDef *EFCopierMode Pattern6
*UIConstraints: *EFCopierMode Pattern6 *EFHTScreen Newsprint
*UIConstraints: *EFHTScreen Newsprint *EFCopierMode Pattern6
*UIConstraints: *EFCopierMode Pattern6 *EFHTScreen Screen1
*UIConstraints: *EFHTScreen Screen1 *EFCopierMode Pattern6
*UIConstraints: *EFCopierMode Pattern6 *EFHTScreen Screen2
*UIConstraints: *EFHTScreen Screen2 *EFCopierMode Pattern6
*UIConstraints: *EFCopierMode Pattern6 *EFHTScreen Screen3
*UIConstraints: *EFHTScreen Screen3 *EFCopierMode Pattern6
*UIConstraints: *EFCopierMode Pattern7 *EFHTScreen AppDef
*UIConstraints: *EFHTScreen AppDef *EFCopierMode Pattern7
*UIConstraints: *EFCopierMode Pattern7 *EFHTScreen Newsprint
*UIConstraints: *EFHTScreen Newsprint *EFCopierMode Pattern7
*UIConstraints: *EFCopierMode Pattern7 *EFHTScreen Screen1
*UIConstraints: *EFHTScreen Screen1 *EFCopierMode Pattern7
*UIConstraints: *EFCopierMode Pattern7 *EFHTScreen Screen2
*UIConstraints: *EFHTScreen Screen2 *EFCopierMode Pattern7
*UIConstraints: *EFCopierMode Pattern7 *EFHTScreen Screen3
*UIConstraints: *EFHTScreen Screen3 *EFCopierMode Pattern7
*UIConstraints: *EFCopierMode Resolution *EFHTScreen AppDef
*UIConstraints: *EFHTScreen AppDef *EFCopierMode Resolution
*UIConstraints: *EFCopierMode Resolution *EFHTScreen Newsprint
*UIConstraints: *EFHTScreen Newsprint *EFCopierMode Resolution
*UIConstraints: *EFCopierMode Resolution *EFHTScreen Screen1
*UIConstraints: *EFHTScreen Screen1 *EFCopierMode Resolution
*UIConstraints: *EFCopierMode Resolution *EFHTScreen Screen2
*UIConstraints: *EFHTScreen Screen2 *EFCopierMode Resolution
*UIConstraints: *EFCopierMode Resolution *EFHTScreen Screen3
*UIConstraints: *EFHTScreen Screen3 *EFCopierMode Resolution
*UIConstraints: *EFCopierMode Standard *EFHTScreen AppDef
*UIConstraints: *EFHTScreen AppDef *EFCopierMode Standard
*UIConstraints: *EFCopierMode Standard *EFHTScreen Newsprint
*UIConstraints: *EFHTScreen Newsprint *EFCopierMode Standard
*UIConstraints: *EFCopierMode Standard *EFHTScreen Screen1
*UIConstraints: *EFHTScreen Screen1 *EFCopierMode Standard
*UIConstraints: *EFCopierMode Standard *EFHTScreen Screen2
*UIConstraints: *EFHTScreen Screen2 *EFCopierMode Standard
*UIConstraints: *EFCopierMode Standard *EFHTScreen Screen3
*UIConstraints: *EFHTScreen Screen3 *EFCopierMode Standard

*UIConstraints: *EFCopyNumMode Auto *EFSort Group
*UIConstraints: *EFSort Group *EFCopyNumMode Auto
*UIConstraints: *EFCopyNumMode Auto *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFCopyNumMode Auto
*UIConstraints: *EFCopyNumMode Auto *EFSort GroupWithShift
*UIConstraints: *EFSort GroupWithShift *EFCopyNumMode Auto

*UIConstraints: *EFCreateMaster *EFResolution 1200x1200dpi
*UIConstraints: *EFResolution 1200x1200dpi *EFCreateMaster

*UIConstraints: *EFCreateMaster *EFMMInUse True
*UIConstraints: *EFMMInUse True *EFCreateMaster

*UIConstraints: *EFCreateMaster *EFSeparations True
*UIConstraints: *EFSeparations True *EFCreateMaster
*UIConstraints: *EFCreateMaster *EFUseMaster formU1
*UIConstraints: *EFUseMaster formU1 *EFCreateMaster
*UIConstraints: *EFCreateMaster *EFUseMaster formU2
*UIConstraints: *EFUseMaster formU2 *EFCreateMaster
*UIConstraints: *EFCreateMaster *EFUseMaster formU3
*UIConstraints: *EFUseMaster formU3 *EFCreateMaster
*UIConstraints: *EFCreateMaster *EFUseMaster formU4
*UIConstraints: *EFUseMaster formU4 *EFCreateMaster
*UIConstraints: *EFCreateMaster *EFUseMaster formU5
*UIConstraints: *EFUseMaster formU5 *EFCreateMaster
*UIConstraints: *EFCreateMaster *EFUseMaster formU6
*UIConstraints: *EFUseMaster formU6 *EFCreateMaster
*UIConstraints: *EFCreateMaster *EFUseMaster formU7
*UIConstraints: *EFUseMaster formU7 *EFCreateMaster
*UIConstraints: *EFCreateMaster *EFUseMaster formU8
*UIConstraints: *EFUseMaster formU8 *EFCreateMaster
*UIConstraints: *EFCreateMaster *EFUseMaster formU9
*UIConstraints: *EFUseMaster formU9 *EFCreateMaster
*UIConstraints: *EFCreateMaster *EFUseMaster formU10
*UIConstraints: *EFUseMaster formU10 *EFCreateMaster
*UIConstraints: *EFCreateMaster *EFUseMaster formU11
*UIConstraints: *EFUseMaster formU11 *EFCreateMaster
*UIConstraints: *EFCreateMaster *EFUseMaster formU12
*UIConstraints: *EFUseMaster formU12 *EFCreateMaster
*UIConstraints: *EFCreateMaster *EFUseMaster formU13
*UIConstraints: *EFUseMaster formU13 *EFCreateMaster
*UIConstraints: *EFCreateMaster *EFUseMaster formU14
*UIConstraints: *EFUseMaster formU14 *EFCreateMaster
*UIConstraints: *EFCreateMaster *EFUseMaster formU15
*UIConstraints: *EFUseMaster formU15 *EFCreateMaster

*UIConstraints: *Duplex None *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *Duplex None
*UIConstraints: *Duplex DuplexTumble *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *Duplex DuplexTumble

*UIConstraints: *EFFinisher *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFFinisher
*UIConstraints: *EFFinisher *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFFinisher
*UIConstraints: *EFFinisher False *EFPunchOpt True
*UIConstraints: *EFPunchOpt True *EFFinisher False
*UIConstraints: *EFFinisher False *EFSort CollateWithShift
*UIConstraints: *EFSort CollateWithShift *EFFinisher False
*UIConstraints: *EFFinisher False *EFSort GroupWithShift
*UIConstraints: *EFSort GroupWithShift *EFFinisher False
*UIConstraints: *EFFinisher False *EFOutputBin Outbin2
*UIConstraints: *EFOutputBin Outbin2 *EFFinisher False
*UIConstraints: *EFFinisher False *EFOutputBin Outbin9
*UIConstraints: *EFOutputBin Outbin9 *EFFinisher False
*UIConstraints: *EFFinisher False *EFOutputBin Outbin11
*UIConstraints: *EFOutputBin Outbin11 *EFFinisher False
*UIConstraints: *EFFinisher False *EFStapler
*UIConstraints: *EFStapler *EFFinisher False
*UIConstraints: *EFFinisher Finisher *EFStapler UStitch
*UIConstraints: *EFStapler UStitch *EFFinisher Finisher

*UIConstraints: *EFGAFeaturesOpt GA1 *EFControlBar True
*UIConstraints: *EFControlBar True *EFGAFeaturesOpt GA1
*UIConstraints: *EFGAFeaturesOpt GA1 *EFProgressives True
*UIConstraints: *EFProgressives True *EFGAFeaturesOpt GA1
*UIConstraints: *EFGAFeaturesOpt GA1 *EFPostFlight
*UIConstraints: *EFPostFlight *EFGAFeaturesOpt GA1

*UIConstraints: *EFMMInsType Tab *EFMediaType Any
*UIConstraints: *EFMediaType Any *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Plain
*UIConstraints: *EFMediaType Plain *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Transparency
*UIConstraints: *EFMediaType Transparency *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Labels
*UIConstraints: *EFMediaType Labels *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Color
*UIConstraints: *EFMediaType Color *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Bond
*UIConstraints: *EFMediaType Bond *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Heavy1
*UIConstraints: *EFMediaType Heavy1 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Heavy2
*UIConstraints: *EFMediaType Heavy2 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Heavy3
*UIConstraints: *EFMediaType Heavy3 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Heavy4
*UIConstraints: *EFMediaType Heavy4 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Heavy5
*UIConstraints: *EFMediaType Heavy5 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType OneSidedCoated1
*UIConstraints: *EFMediaType OneSidedCoated1 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType OneSidedCoated2
*UIConstraints: *EFMediaType OneSidedCoated2 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType OneSidedCoated3
*UIConstraints: *EFMediaType OneSidedCoated3 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType OneSidedCoated4
*UIConstraints: *EFMediaType OneSidedCoated4 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType OneSidedCoated5
*UIConstraints: *EFMediaType OneSidedCoated5 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType TwoSidedCoated1
*UIConstraints: *EFMediaType TwoSidedCoated1 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType TwoSidedCoated2
*UIConstraints: *EFMediaType TwoSidedCoated2 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType TwoSidedCoated3
*UIConstraints: *EFMediaType TwoSidedCoated3 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType TwoSidedCoated4
*UIConstraints: *EFMediaType TwoSidedCoated4 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType TwoSidedCoated5
*UIConstraints: *EFMediaType TwoSidedCoated5 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Prepunched1
*UIConstraints: *EFMediaType Prepunched1 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Prepunched2
*UIConstraints: *EFMediaType Prepunched2 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Recycled1
*UIConstraints: *EFMediaType Recycled1 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Recycled2
*UIConstraints: *EFMediaType Recycled2 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Recycled3
*UIConstraints: *EFMediaType Recycled3 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Recycled4
*UIConstraints: *EFMediaType Recycled4 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Recycled5
*UIConstraints: *EFMediaType Recycled5 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Recycled6
*UIConstraints: *EFMediaType Recycled6 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Recycled7
*UIConstraints: *EFMediaType Recycled7 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Texture
*UIConstraints: *EFMediaType Texture *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType TexturePaper1
*UIConstraints: *EFMediaType TexturePaper1 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType TexturePaper2
*UIConstraints: *EFMediaType TexturePaper2 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType TexturePaper3
*UIConstraints: *EFMediaType TexturePaper3 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType TexturePaper4
*UIConstraints: *EFMediaType TexturePaper4 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType TexturePaper5
*UIConstraints: *EFMediaType TexturePaper5 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType TexturePaper6
*UIConstraints: *EFMediaType TexturePaper6 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Thin
*UIConstraints: *EFMediaType Thin *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Vellum1
*UIConstraints: *EFMediaType Vellum1 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Vellum2
*UIConstraints: *EFMediaType Vellum2 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Vellum3
*UIConstraints: *EFMediaType Vellum3 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Vellum4
*UIConstraints: *EFMediaType Vellum4 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Vellum5
*UIConstraints: *EFMediaType Vellum5 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Vellum6
*UIConstraints: *EFMediaType Vellum6 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *EFMediaType Vellum7
*UIConstraints: *EFMediaType Vellum7 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageSize A3
*UIConstraints: *PageSize A3 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageRegion A3
*UIConstraints: *PageRegion A3 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageSize B4
*UIConstraints: *PageSize B4 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageRegion B4
*UIConstraints: *PageRegion B4 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageSize B5
*UIConstraints: *PageSize B5 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageRegion B5
*UIConstraints: *PageRegion B5 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageSize A5
*UIConstraints: *PageSize A5 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageRegion A5
*UIConstraints: *PageRegion A5 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageSize Tabloid
*UIConstraints: *PageSize Tabloid *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageRegion Tabloid
*UIConstraints: *PageRegion Tabloid *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageSize Legal
*UIConstraints: *PageSize Legal *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageRegion Legal
*UIConstraints: *PageRegion Legal *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageSize Statement
*UIConstraints: *PageSize Statement *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageRegion Statement
*UIConstraints: *PageRegion Statement *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageSize SRA3
*UIConstraints: *PageSize SRA3 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageRegion SRA3
*UIConstraints: *PageRegion SRA3 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageSize TabloidExtra
*UIConstraints: *PageSize TabloidExtra *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageRegion TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageSize Executive
*UIConstraints: *PageSize Executive *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageRegion Executive
*UIConstraints: *PageRegion Executive *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageSize 13x19
*UIConstraints: *PageSize 13x19 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *PageRegion 13x19
*UIConstraints: *PageRegion 13x19 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *InputSlot AutoSelect
*UIConstraints: *InputSlot AutoSelect *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *InputSlot ManualFeed
*UIConstraints: *InputSlot ManualFeed *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *InputSlot Tray5
*UIConstraints: *InputSlot Tray5 *EFMMInsType Tab
*UIConstraints: *EFMMInsType Tab *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *EFMMInsType Tab

*UIConstraints: *EFMediaInterlv *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaInterlv
*UIConstraints: *EFMediaInterlv *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaInterlv
*UIConstraints: *EFMediaInterlv *Duplex DuplexNoTumble
*UIConstraints: *Duplex DuplexNoTumble *EFMediaInterlv
*UIConstraints: *EFMediaInterlv *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexTumble *EFMediaInterlv

*UIConstraints: *EFMediaType Heavy5 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType Heavy5
*UIConstraints: *EFMediaType Heavy5 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType Heavy5
*UIConstraints: *EFMediaType Heavy5 *Duplex
*UIConstraints: *Duplex *EFMediaType Heavy5
*UIConstraints: *EFMediaType Labels *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType Labels
*UIConstraints: *EFMediaType Labels *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType Labels
*UIConstraints: *EFMediaType Labels *EFSort CollateWithShift
*UIConstraints: *EFSort CollateWithShift *EFMediaType Labels
*UIConstraints: *EFMediaType Labels *EFSort GroupWithShift
*UIConstraints: *EFSort GroupWithShift *EFMediaType Labels
*UIConstraints: *EFMediaType Labels *Duplex
*UIConstraints: *Duplex *EFMediaType Labels
*UIConstraints: *EFMediaType OneSidedCoated1 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType OneSidedCoated1
*UIConstraints: *EFMediaType OneSidedCoated1 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType OneSidedCoated1
*UIConstraints: *EFMediaType OneSidedCoated2 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType OneSidedCoated2
*UIConstraints: *EFMediaType OneSidedCoated2 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType OneSidedCoated2
*UIConstraints: *EFMediaType OneSidedCoated3 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType OneSidedCoated3
*UIConstraints: *EFMediaType OneSidedCoated3 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType OneSidedCoated3
*UIConstraints: *EFMediaType OneSidedCoated4 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType OneSidedCoated4
*UIConstraints: *EFMediaType OneSidedCoated4 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType OneSidedCoated4
*UIConstraints: *EFMediaType OneSidedCoated5 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType OneSidedCoated5
*UIConstraints: *EFMediaType OneSidedCoated5 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType OneSidedCoated5
*UIConstraints: *EFMediaType OneSidedCoated5 *Duplex
*UIConstraints: *Duplex *EFMediaType OneSidedCoated5
*UIConstraints: *EFMediaType Prepunched1 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType Prepunched1
*UIConstraints: *EFMediaType Prepunched1 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType Prepunched1
*UIConstraints: *EFMediaType Prepunched2 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType Prepunched2
*UIConstraints: *EFMediaType Prepunched2 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType Prepunched2
*UIConstraints: *EFMediaType Recycled4 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType Recycled4
*UIConstraints: *EFMediaType Recycled4 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType Recycled4
*UIConstraints: *EFMediaType Recycled4 *Duplex
*UIConstraints: *Duplex *EFMediaType Recycled4
*UIConstraints: *EFMediaType Tabpaper1 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType Tabpaper1
*UIConstraints: *EFMediaType Tabpaper1 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType Tabpaper1
*UIConstraints: *EFMediaType Tabpaper1 *Duplex
*UIConstraints: *Duplex *EFMediaType Tabpaper1
*UIConstraints: *EFMediaType Tabpaper2 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType Tabpaper2
*UIConstraints: *EFMediaType Tabpaper2 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType Tabpaper2
*UIConstraints: *EFMediaType Tabpaper2 *Duplex
*UIConstraints: *Duplex *EFMediaType Tabpaper2
*UIConstraints: *EFMediaType Texture *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType Texture
*UIConstraints: *EFMediaType Texture *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType Texture
*UIConstraints: *EFMediaType TexturePaper1 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType TexturePaper1
*UIConstraints: *EFMediaType TexturePaper1 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType TexturePaper1
*UIConstraints: *EFMediaType TexturePaper2 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType TexturePaper2
*UIConstraints: *EFMediaType TexturePaper2 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType TexturePaper2
*UIConstraints: *EFMediaType TexturePaper3 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType TexturePaper3
*UIConstraints: *EFMediaType TexturePaper3 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType TexturePaper3
*UIConstraints: *EFMediaType TexturePaper4 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType TexturePaper4
*UIConstraints: *EFMediaType TexturePaper4 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType TexturePaper4
*UIConstraints: *EFMediaType TexturePaper5 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType TexturePaper5
*UIConstraints: *EFMediaType TexturePaper5 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType TexturePaper5
*UIConstraints: *EFMediaType TexturePaper6 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType TexturePaper6
*UIConstraints: *EFMediaType TexturePaper6 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType TexturePaper6
*UIConstraints: *EFMediaType TexturePaper6 *Duplex
*UIConstraints: *Duplex *EFMediaType TexturePaper6
*UIConstraints: *EFMediaType Transparency *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType Transparency
*UIConstraints: *EFMediaType Transparency *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType Transparency
*UIConstraints: *EFMediaType Transparency *EFSort CollateWithShift
*UIConstraints: *EFSort CollateWithShift *EFMediaType Transparency
*UIConstraints: *EFMediaType Transparency *EFSort GroupWithShift
*UIConstraints: *EFSort GroupWithShift *EFMediaType Transparency
*UIConstraints: *EFMediaType Transparency *Duplex
*UIConstraints: *Duplex *EFMediaType Transparency
*UIConstraints: *EFMediaType TwoSidedCoated1 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType TwoSidedCoated1
*UIConstraints: *EFMediaType TwoSidedCoated1 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType TwoSidedCoated1
*UIConstraints: *EFMediaType TwoSidedCoated2 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType TwoSidedCoated2
*UIConstraints: *EFMediaType TwoSidedCoated2 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType TwoSidedCoated2
*UIConstraints: *EFMediaType TwoSidedCoated3 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType TwoSidedCoated3
*UIConstraints: *EFMediaType TwoSidedCoated3 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType TwoSidedCoated3
*UIConstraints: *EFMediaType TwoSidedCoated4 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType TwoSidedCoated4
*UIConstraints: *EFMediaType TwoSidedCoated4 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType TwoSidedCoated4
*UIConstraints: *EFMediaType TwoSidedCoated5 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType TwoSidedCoated5
*UIConstraints: *EFMediaType TwoSidedCoated5 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType TwoSidedCoated5
*UIConstraints: *EFMediaType TwoSidedCoated5 *Duplex
*UIConstraints: *Duplex *EFMediaType TwoSidedCoated5
*UIConstraints: *EFMediaType Vellum1 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType Vellum1
*UIConstraints: *EFMediaType Vellum1 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType Vellum1
*UIConstraints: *EFMediaType Vellum2 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType Vellum2
*UIConstraints: *EFMediaType Vellum2 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType Vellum2
*UIConstraints: *EFMediaType Vellum3 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType Vellum3
*UIConstraints: *EFMediaType Vellum3 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType Vellum3
*UIConstraints: *EFMediaType Vellum4 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType Vellum4
*UIConstraints: *EFMediaType Vellum4 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType Vellum4
*UIConstraints: *EFMediaType Vellum5 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType Vellum5
*UIConstraints: *EFMediaType Vellum5 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType Vellum5
*UIConstraints: *EFMediaType Vellum6 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType Vellum6
*UIConstraints: *EFMediaType Vellum6 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType Vellum6
*UIConstraints: *EFMediaType Vellum7 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *EFMediaType Vellum7
*UIConstraints: *EFMediaType Vellum7 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *EFMediaType Vellum7
*UIConstraints: *EFMediaType Vellum7 *Duplex
*UIConstraints: *Duplex *EFMediaType Vellum7

*UIConstraints: *EFMltClrPrntMap True *EFSubstColors True
*UIConstraints: *EFSubstColors True *EFMltClrPrntMap True

*UIConstraints: *EFPaperDeckOpt False *InputSlot Tray5
*UIConstraints: *InputSlot Tray5 *EFPaperDeckOpt False
*UIConstraints: *EFPaperDeckOpt False *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *EFPaperDeckOpt False
*UIConstraints: *EFPaperDeckOpt False *EFCoverTray Tray5
*UIConstraints: *EFCoverTray Tray5 *EFPaperDeckOpt False
*UIConstraints: *EFPaperDeckOpt False *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *EFPaperDeckOpt False
*UIConstraints: *EFPaperDeckOpt False *EFBkCoverTray Tray5
*UIConstraints: *EFBkCoverTray Tray5 *EFPaperDeckOpt False
*UIConstraints: *EFPaperDeckOpt False *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *EFPaperDeckOpt False
*UIConstraints: *EFPaperDeckOpt Option3 *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *EFPaperDeckOpt Option3
*UIConstraints: *EFPaperDeckOpt Option3 *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *EFPaperDeckOpt Option3
*UIConstraints: *EFPaperDeckOpt Option3 *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *EFPaperDeckOpt Option3
*UIConstraints: *EFPaperDeckOpt Option4 *InputSlot Tray5
*UIConstraints: *InputSlot Tray5 *EFPaperDeckOpt Option4
*UIConstraints: *EFPaperDeckOpt Option4 *EFCoverTray Tray5
*UIConstraints: *EFCoverTray Tray5 *EFPaperDeckOpt Option4
*UIConstraints: *EFPaperDeckOpt Option4 *EFBkCoverTray Tray5
*UIConstraints: *EFBkCoverTray Tray5 *EFPaperDeckOpt Option4

*UIConstraints: *EFPostFlight *EFSubstColors True
*UIConstraints: *EFSubstColors True *EFPostFlight
*UIConstraints: *EFPostFlight *EFSeparations True
*UIConstraints: *EFSeparations True *EFPostFlight
*UIConstraints: *EFPostFlight *EFProgressives True
*UIConstraints: *EFProgressives True *EFPostFlight

*UIConstraints: *EFPureBlack BLACKNORMAL *EFBlkOvpCtrl TEXTONLY
*UIConstraints: *EFBlkOvpCtrl TEXTONLY *EFPureBlack BLACKNORMAL
*UIConstraints: *EFPureBlack BLACKNORMAL *EFBlkOvpCtrl TEXTGRAPHICS
*UIConstraints: *EFBlkOvpCtrl TEXTGRAPHICS *EFPureBlack BLACKNORMAL
*UIConstraints: *EFPureBlack BLACKNORMAL *EFBlkOvpCtrl EFBlkOvpCtrlDEF
*UIConstraints: *EFBlkOvpCtrl EFBlkOvpCtrlDEF *EFPureBlack BLACKNORMAL
*UIConstraints: *EFPureBlack BLACKRICHON *EFBlkOvpCtrl TEXTONLY
*UIConstraints: *EFBlkOvpCtrl TEXTONLY *EFPureBlack BLACKRICHON
*UIConstraints: *EFPureBlack BLACKRICHON *EFBlkOvpCtrl TEXTGRAPHICS
*UIConstraints: *EFBlkOvpCtrl TEXTGRAPHICS *EFPureBlack BLACKRICHON
*UIConstraints: *EFPureBlack BLACKRICHON *EFBlkOvpCtrl EFBlkOvpCtrlDEF
*UIConstraints: *EFBlkOvpCtrl EFBlkOvpCtrlDEF *EFPureBlack BLACKRICHON

*UIConstraints: *EFSeparations True *EFPrintMaster True
*UIConstraints: *EFPrintMaster True *EFSeparations True
*UIConstraints: *EFSeparations True *EFPPTSlide True
*UIConstraints: *EFPPTSlide True *EFSeparations True

*UIConstraints: *EFSimSpeed BETR *EFSimulation NONE
*UIConstraints: *EFSimulation NONE *EFSimSpeed BETR
*UIConstraints: *EFSimSpeed BETR *EFSimulation MATCHCOPY
*UIConstraints: *EFSimulation MATCHCOPY *EFSimSpeed BETR
*UIConstraints: *EFSimSpeed FAST *EFSimulation NONE
*UIConstraints: *EFSimulation NONE *EFSimSpeed FAST
*UIConstraints: *EFSimSpeed FAST *EFSimulation MATCHCOPY
*UIConstraints: *EFSimulation MATCHCOPY *EFSimSpeed FAST
*UIConstraints: *EFSimSpeed S4X4 *EFSimulation NONE
*UIConstraints: *EFSimulation NONE *EFSimSpeed S4X4
*UIConstraints: *EFSimSpeed S4X4 *EFSimulation MATCHCOPY
*UIConstraints: *EFSimulation MATCHCOPY *EFSimSpeed S4X4

*UIConstraints: *EFSimulation CUSTOM1 *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation CUSTOM1
*UIConstraints: *EFSimulation CUSTOM10 *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation CUSTOM10
*UIConstraints: *EFSimulation CUSTOM2 *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation CUSTOM2
*UIConstraints: *EFSimulation CUSTOM3 *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation CUSTOM3
*UIConstraints: *EFSimulation CUSTOM4 *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation CUSTOM4
*UIConstraints: *EFSimulation CUSTOM5 *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation CUSTOM5
*UIConstraints: *EFSimulation CUSTOM6 *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation CUSTOM6
*UIConstraints: *EFSimulation CUSTOM7 *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation CUSTOM7
*UIConstraints: *EFSimulation CUSTOM8 *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation CUSTOM8
*UIConstraints: *EFSimulation CUSTOM9 *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation CUSTOM9
*UIConstraints: *EFSimulation DIC *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation DIC
*UIConstraints: *EFSimulation EUROSCALE *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation EUROSCALE
*UIConstraints: *EFSimulation ISOCOATED *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation ISOCOATED
*UIConstraints: *EFSimulation ISOUNCOATED *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation ISOUNCOATED
*UIConstraints: *EFSimulation JCOLOR *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation JCOLOR
*UIConstraints: *EFSimulation JMPA *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation JMPA
*UIConstraints: *EFSimulation MATCHCOPY *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation MATCHCOPY
*UIConstraints: *EFSimulation SWOPCOATED *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation SWOPCOATED
*UIConstraints: *EFSimulation TOYOCOATED *EFMltClrPrntMap True
*UIConstraints: *EFMltClrPrntMap True *EFSimulation TOYOCOATED

*UIConstraints: *EFSort False *EFStapler U1LeftP
*UIConstraints: *EFStapler U1LeftP *EFSort False
*UIConstraints: *EFSort False *EFStapler U1LeftL
*UIConstraints: *EFStapler U1LeftL *EFSort False
*UIConstraints: *EFSort False *EFStapler U1RightP
*UIConstraints: *EFStapler U1RightP *EFSort False
*UIConstraints: *EFSort False *EFStapler U1RightL
*UIConstraints: *EFStapler U1RightL *EFSort False
*UIConstraints: *EFSort False *EFStapler U2TopP
*UIConstraints: *EFStapler U2TopP *EFSort False
*UIConstraints: *EFSort False *EFStapler U2TopL
*UIConstraints: *EFStapler U2TopL *EFSort False
*UIConstraints: *EFSort False *EFStapler U2LeftP
*UIConstraints: *EFStapler U2LeftP *EFSort False
*UIConstraints: *EFSort False *EFStapler U2LeftL
*UIConstraints: *EFStapler U2LeftL *EFSort False
*UIConstraints: *EFSort False *EFStapler U2RightP
*UIConstraints: *EFStapler U2RightP *EFSort False
*UIConstraints: *EFSort False *EFStapler U2RightL
*UIConstraints: *EFStapler U2RightL *EFSort False

*UIConstraints: *EFSpotColors OFF *EFSeparations True
*UIConstraints: *EFSeparations True *EFSpotColors OFF

*UIConstraints: *EFStapler U1LeftL *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *EFStapler U1LeftL
*UIConstraints: *EFStapler U1LeftP *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *EFStapler U1LeftP
*UIConstraints: *EFStapler U1RightL *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *EFStapler U1RightL
*UIConstraints: *EFStapler U1RightP *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *EFStapler U1RightP
*UIConstraints: *EFStapler U2LeftL *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *EFStapler U2LeftL
*UIConstraints: *EFStapler U2LeftP *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *EFStapler U2LeftP
*UIConstraints: *EFStapler U2RightL *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *EFStapler U2RightL
*UIConstraints: *EFStapler U2RightP *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *EFStapler U2RightP
*UIConstraints: *EFStapler U2TopL *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *EFStapler U2TopL
*UIConstraints: *EFStapler U2TopP *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *EFStapler U2TopP

*UIConstraints: *EFTrapping True *EFSeparations True
*UIConstraints: *EFSeparations True *EFTrapping True

*UIConstraints: *EFTrayAlignment True *InputSlot AutoSelect
*UIConstraints: *InputSlot AutoSelect *EFTrayAlignment True

*UIConstraints: *EFUseMaster *EFResolution 1200x1200dpi
*UIConstraints: *EFResolution 1200x1200dpi *EFUseMaster
*UIConstraints: *EFUseMaster *EFSeparations True
*UIConstraints: *EFSeparations True *EFUseMaster

*UIConstraints: *PageSize 13x19 *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageSize 13x19
*UIConstraints: *PageRegion 13x19 *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageRegion 13x19
*UIConstraints: *PageSize 13x19 *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageSize 13x19
*UIConstraints: *PageRegion 13x19 *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageRegion 13x19
*UIConstraints: *PageSize 13x19 *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageSize 13x19
*UIConstraints: *PageRegion 13x19 *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageRegion 13x19
*UIConstraints: *PageSize 13x19 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageSize 13x19
*UIConstraints: *PageRegion 13x19 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageRegion 13x19
*UIConstraints: *PageSize 13x19 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageSize 13x19
*UIConstraints: *PageRegion 13x19 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageRegion 13x19
*UIConstraints: *PageSize 13x19 *EFSort CollateWithShift
*UIConstraints: *EFSort CollateWithShift *PageSize 13x19
*UIConstraints: *PageRegion 13x19 *EFSort CollateWithShift
*UIConstraints: *EFSort CollateWithShift *PageRegion 13x19
*UIConstraints: *PageSize 13x19 *EFSort GroupWithShift
*UIConstraints: *EFSort GroupWithShift *PageSize 13x19
*UIConstraints: *PageRegion 13x19 *EFSort GroupWithShift
*UIConstraints: *EFSort GroupWithShift *PageRegion 13x19
*UIConstraints: *PageSize 13x19 *EFStapler
*UIConstraints: *EFStapler *PageSize 13x19
*UIConstraints: *PageRegion 13x19 *EFStapler
*UIConstraints: *EFStapler *PageRegion 13x19
*UIConstraints: *PageSize 13x19 *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *PageSize 13x19
*UIConstraints: *PageRegion 13x19 *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *PageRegion 13x19
*UIConstraints: *PageSize A3 *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageSize A3
*UIConstraints: *PageRegion A3 *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageRegion A3
*UIConstraints: *PageSize A3 *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageSize A3
*UIConstraints: *PageRegion A3 *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageRegion A3
*UIConstraints: *PageSize A3 *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageSize A3
*UIConstraints: *PageRegion A3 *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageRegion A3
*UIConstraints: *PageSize A3 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageSize A3
*UIConstraints: *PageRegion A3 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageRegion A3
*UIConstraints: *PageSize A3 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageSize A3
*UIConstraints: *PageRegion A3 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageRegion A3
*UIConstraints: *PageSize A3 *EFStapler U2TopL
*UIConstraints: *EFStapler U2TopL *PageSize A3
*UIConstraints: *PageRegion A3 *EFStapler U2TopL
*UIConstraints: *EFStapler U2TopL *PageRegion A3
*UIConstraints: *PageSize A3 *EFStapler U2LeftP
*UIConstraints: *EFStapler U2LeftP *PageSize A3
*UIConstraints: *PageRegion A3 *EFStapler U2LeftP
*UIConstraints: *EFStapler U2LeftP *PageRegion A3
*UIConstraints: *PageSize A3 *EFStapler U2RightP
*UIConstraints: *EFStapler U2RightP *PageSize A3
*UIConstraints: *PageRegion A3 *EFStapler U2RightP
*UIConstraints: *EFStapler U2RightP *PageRegion A3
*UIConstraints: *PageSize A3 *EFCopierBooklet LeftBinding
*UIConstraints: *EFCopierBooklet LeftBinding *PageSize A3
*UIConstraints: *PageRegion A3 *EFCopierBooklet LeftBinding
*UIConstraints: *EFCopierBooklet LeftBinding *PageRegion A3
*UIConstraints: *PageSize A3 *EFCopierBooklet LeftBindingLegal
*UIConstraints: *EFCopierBooklet LeftBindingLegal *PageSize A3
*UIConstraints: *PageRegion A3 *EFCopierBooklet LeftBindingLegal
*UIConstraints: *EFCopierBooklet LeftBindingLegal *PageRegion A3
*UIConstraints: *PageSize A3 *EFCopierBooklet HalfLeftBindingLegal
*UIConstraints: *EFCopierBooklet HalfLeftBindingLegal *PageSize A3
*UIConstraints: *PageRegion A3 *EFCopierBooklet HalfLeftBindingLegal
*UIConstraints: *EFCopierBooklet HalfLeftBindingLegal *PageRegion A3
*UIConstraints: *PageSize A4 *EFCopierBooklet LeftBindingLegal
*UIConstraints: *EFCopierBooklet LeftBindingLegal *PageSize A4
*UIConstraints: *PageRegion A4 *EFCopierBooklet LeftBindingLegal
*UIConstraints: *EFCopierBooklet LeftBindingLegal *PageRegion A4
*UIConstraints: *PageSize A4 *EFCopierBooklet HalfLeftBindingLegal
*UIConstraints: *EFCopierBooklet HalfLeftBindingLegal *PageSize A4
*UIConstraints: *PageRegion A4 *EFCopierBooklet HalfLeftBindingLegal
*UIConstraints: *EFCopierBooklet HalfLeftBindingLegal *PageRegion A4
*UIConstraints: *PageSize A5 *InputSlot Tray5
*UIConstraints: *InputSlot Tray5 *PageSize A5
*UIConstraints: *PageRegion A5 *InputSlot Tray5
*UIConstraints: *InputSlot Tray5 *PageRegion A5
*UIConstraints: *PageSize A5 *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageSize A5
*UIConstraints: *PageRegion A5 *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageRegion A5
*UIConstraints: *PageSize A5 *EFCoverTray Tray5
*UIConstraints: *EFCoverTray Tray5 *PageSize A5
*UIConstraints: *PageRegion A5 *EFCoverTray Tray5
*UIConstraints: *EFCoverTray Tray5 *PageRegion A5
*UIConstraints: *PageSize A5 *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageSize A5
*UIConstraints: *PageRegion A5 *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageRegion A5
*UIConstraints: *PageSize A5 *EFBkCoverTray Tray5
*UIConstraints: *EFBkCoverTray Tray5 *PageSize A5
*UIConstraints: *PageRegion A5 *EFBkCoverTray Tray5
*UIConstraints: *EFBkCoverTray Tray5 *PageRegion A5
*UIConstraints: *PageSize A5 *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageSize A5
*UIConstraints: *PageRegion A5 *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageRegion A5
*UIConstraints: *PageSize A5 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageSize A5
*UIConstraints: *PageRegion A5 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageRegion A5
*UIConstraints: *PageSize A5 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageSize A5
*UIConstraints: *PageRegion A5 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageRegion A5
*UIConstraints: *PageSize A5 *EFSort CollateWithShift
*UIConstraints: *EFSort CollateWithShift *PageSize A5
*UIConstraints: *PageRegion A5 *EFSort CollateWithShift
*UIConstraints: *EFSort CollateWithShift *PageRegion A5
*UIConstraints: *PageSize A5 *EFSort GroupWithShift
*UIConstraints: *EFSort GroupWithShift *PageSize A5
*UIConstraints: *PageRegion A5 *EFSort GroupWithShift
*UIConstraints: *EFSort GroupWithShift *PageRegion A5
*UIConstraints: *PageSize A5 *EFStapler U1LeftP
*UIConstraints: *EFStapler U1LeftP *PageSize A5
*UIConstraints: *PageRegion A5 *EFStapler U1LeftP
*UIConstraints: *EFStapler U1LeftP *PageRegion A5
*UIConstraints: *PageSize A5 *EFStapler U1LeftL
*UIConstraints: *EFStapler U1LeftL *PageSize A5
*UIConstraints: *PageRegion A5 *EFStapler U1LeftL
*UIConstraints: *EFStapler U1LeftL *PageRegion A5
*UIConstraints: *PageSize A5 *EFStapler U1RightP
*UIConstraints: *EFStapler U1RightP *PageSize A5
*UIConstraints: *PageRegion A5 *EFStapler U1RightP
*UIConstraints: *EFStapler U1RightP *PageRegion A5
*UIConstraints: *PageSize A5 *EFStapler U1RightL
*UIConstraints: *EFStapler U1RightL *PageSize A5
*UIConstraints: *PageRegion A5 *EFStapler U1RightL
*UIConstraints: *EFStapler U1RightL *PageRegion A5
*UIConstraints: *PageSize A5 *EFStapler U2TopP
*UIConstraints: *EFStapler U2TopP *PageSize A5
*UIConstraints: *PageRegion A5 *EFStapler U2TopP
*UIConstraints: *EFStapler U2TopP *PageRegion A5
*UIConstraints: *PageSize A5 *EFStapler U2TopL
*UIConstraints: *EFStapler U2TopL *PageSize A5
*UIConstraints: *PageRegion A5 *EFStapler U2TopL
*UIConstraints: *EFStapler U2TopL *PageRegion A5
*UIConstraints: *PageSize A5 *EFStapler U2LeftP
*UIConstraints: *EFStapler U2LeftP *PageSize A5
*UIConstraints: *PageRegion A5 *EFStapler U2LeftP
*UIConstraints: *EFStapler U2LeftP *PageRegion A5
*UIConstraints: *PageSize A5 *EFStapler U2LeftL
*UIConstraints: *EFStapler U2LeftL *PageSize A5
*UIConstraints: *PageRegion A5 *EFStapler U2LeftL
*UIConstraints: *EFStapler U2LeftL *PageRegion A5
*UIConstraints: *PageSize A5 *EFStapler U2RightP
*UIConstraints: *EFStapler U2RightP *PageSize A5
*UIConstraints: *PageRegion A5 *EFStapler U2RightP
*UIConstraints: *EFStapler U2RightP *PageRegion A5
*UIConstraints: *PageSize A5 *EFStapler U2RightL
*UIConstraints: *EFStapler U2RightL *PageSize A5
*UIConstraints: *PageRegion A5 *EFStapler U2RightL
*UIConstraints: *EFStapler U2RightL *PageRegion A5
*UIConstraints: *PageSize A5 *EFCopierBooklet LeftBindingLegal
*UIConstraints: *EFCopierBooklet LeftBindingLegal *PageSize A5
*UIConstraints: *PageRegion A5 *EFCopierBooklet LeftBindingLegal
*UIConstraints: *EFCopierBooklet LeftBindingLegal *PageRegion A5
*UIConstraints: *PageSize A5 *EFCopierBooklet HalfLeftBinding
*UIConstraints: *EFCopierBooklet HalfLeftBinding *PageSize A5
*UIConstraints: *PageRegion A5 *EFCopierBooklet HalfLeftBinding
*UIConstraints: *EFCopierBooklet HalfLeftBinding *PageRegion A5
*UIConstraints: *PageSize A5 *EFCopierBooklet HalfLeftBindingLegal
*UIConstraints: *EFCopierBooklet HalfLeftBindingLegal *PageSize A5
*UIConstraints: *PageRegion A5 *EFCopierBooklet HalfLeftBindingLegal
*UIConstraints: *EFCopierBooklet HalfLeftBindingLegal *PageRegion A5
*UIConstraints: *PageSize B4 *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageSize B4
*UIConstraints: *PageRegion B4 *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageRegion B4
*UIConstraints: *PageSize B4 *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageSize B4
*UIConstraints: *PageRegion B4 *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageRegion B4
*UIConstraints: *PageSize B4 *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageSize B4
*UIConstraints: *PageRegion B4 *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageRegion B4
*UIConstraints: *PageSize B4 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageSize B4
*UIConstraints: *PageRegion B4 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageRegion B4
*UIConstraints: *PageSize B4 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageSize B4
*UIConstraints: *PageRegion B4 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageRegion B4
*UIConstraints: *PageSize B4 *EFStapler U2TopL
*UIConstraints: *EFStapler U2TopL *PageSize B4
*UIConstraints: *PageRegion B4 *EFStapler U2TopL
*UIConstraints: *EFStapler U2TopL *PageRegion B4
*UIConstraints: *PageSize B4 *EFStapler U2LeftP
*UIConstraints: *EFStapler U2LeftP *PageSize B4
*UIConstraints: *PageRegion B4 *EFStapler U2LeftP
*UIConstraints: *EFStapler U2LeftP *PageRegion B4
*UIConstraints: *PageSize B4 *EFStapler U2RightP
*UIConstraints: *EFStapler U2RightP *PageSize B4
*UIConstraints: *PageRegion B4 *EFStapler U2RightP
*UIConstraints: *EFStapler U2RightP *PageRegion B4
*UIConstraints: *PageSize B4 *EFCopierBooklet LeftBinding
*UIConstraints: *EFCopierBooklet LeftBinding *PageSize B4
*UIConstraints: *PageRegion B4 *EFCopierBooklet LeftBinding
*UIConstraints: *EFCopierBooklet LeftBinding *PageRegion B4
*UIConstraints: *PageSize B4 *EFCopierBooklet LeftBindingLegal
*UIConstraints: *EFCopierBooklet LeftBindingLegal *PageSize B4
*UIConstraints: *PageRegion B4 *EFCopierBooklet LeftBindingLegal
*UIConstraints: *EFCopierBooklet LeftBindingLegal *PageRegion B4
*UIConstraints: *PageSize B4 *EFCopierBooklet HalfLeftBindingLegal
*UIConstraints: *EFCopierBooklet HalfLeftBindingLegal *PageSize B4
*UIConstraints: *PageRegion B4 *EFCopierBooklet HalfLeftBindingLegal
*UIConstraints: *EFCopierBooklet HalfLeftBindingLegal *PageRegion B4
*UIConstraints: *PageSize B5 *EFStapler U2TopP
*UIConstraints: *EFStapler U2TopP *PageSize B5
*UIConstraints: *PageRegion B5 *EFStapler U2TopP
*UIConstraints: *EFStapler U2TopP *PageRegion B5
*UIConstraints: *PageSize B5 *EFStapler U2LeftL
*UIConstraints: *EFStapler U2LeftL *PageSize B5
*UIConstraints: *PageRegion B5 *EFStapler U2LeftL
*UIConstraints: *EFStapler U2LeftL *PageRegion B5
*UIConstraints: *PageSize B5 *EFStapler U2RightL
*UIConstraints: *EFStapler U2RightL *PageSize B5
*UIConstraints: *PageRegion B5 *EFStapler U2RightL
*UIConstraints: *EFStapler U2RightL *PageRegion B5
*UIConstraints: *PageSize B5 *EFCopierBooklet LeftBindingLegal
*UIConstraints: *EFCopierBooklet LeftBindingLegal *PageSize B5
*UIConstraints: *PageRegion B5 *EFCopierBooklet LeftBindingLegal
*UIConstraints: *EFCopierBooklet LeftBindingLegal *PageRegion B5
*UIConstraints: *PageSize B5 *EFCopierBooklet HalfLeftBinding
*UIConstraints: *EFCopierBooklet HalfLeftBinding *PageSize B5
*UIConstraints: *PageRegion B5 *EFCopierBooklet HalfLeftBinding
*UIConstraints: *EFCopierBooklet HalfLeftBinding *PageRegion B5
*UIConstraints: *PageSize B5 *EFCopierBooklet HalfLeftBindingLegal
*UIConstraints: *EFCopierBooklet HalfLeftBindingLegal *PageSize B5
*UIConstraints: *PageRegion B5 *EFCopierBooklet HalfLeftBindingLegal
*UIConstraints: *EFCopierBooklet HalfLeftBindingLegal *PageRegion B5
*UIConstraints: *PageSize Executive *InputSlot Tray5
*UIConstraints: *InputSlot Tray5 *PageSize Executive
*UIConstraints: *PageRegion Executive *InputSlot Tray5
*UIConstraints: *InputSlot Tray5 *PageRegion Executive
*UIConstraints: *PageSize Executive *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageSize Executive
*UIConstraints: *PageRegion Executive *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageRegion Executive
*UIConstraints: *PageSize Executive *EFCoverTray Tray5
*UIConstraints: *EFCoverTray Tray5 *PageSize Executive
*UIConstraints: *PageRegion Executive *EFCoverTray Tray5
*UIConstraints: *EFCoverTray Tray5 *PageRegion Executive
*UIConstraints: *PageSize Executive *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageSize Executive
*UIConstraints: *PageRegion Executive *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageRegion Executive
*UIConstraints: *PageSize Executive *EFBkCoverTray Tray5
*UIConstraints: *EFBkCoverTray Tray5 *PageSize Executive
*UIConstraints: *PageRegion Executive *EFBkCoverTray Tray5
*UIConstraints: *EFBkCoverTray Tray5 *PageRegion Executive
*UIConstraints: *PageSize Executive *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageSize Executive
*UIConstraints: *PageRegion Executive *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageRegion Executive
*UIConstraints: *PageSize Executive *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageSize Executive
*UIConstraints: *PageRegion Executive *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageRegion Executive
*UIConstraints: *PageSize Executive *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageSize Executive
*UIConstraints: *PageRegion Executive *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageRegion Executive
*UIConstraints: *PageSize Executive *EFStapler U2TopP
*UIConstraints: *EFStapler U2TopP *PageSize Executive
*UIConstraints: *PageRegion Executive *EFStapler U2TopP
*UIConstraints: *EFStapler U2TopP *PageRegion Executive
*UIConstraints: *PageSize Executive *EFStapler U2LeftL
*UIConstraints: *EFStapler U2LeftL *PageSize Executive
*UIConstraints: *PageRegion Executive *EFStapler U2LeftL
*UIConstraints: *EFStapler U2LeftL *PageRegion Executive
*UIConstraints: *PageSize Executive *EFStapler U2RightL
*UIConstraints: *EFStapler U2RightL *PageSize Executive
*UIConstraints: *PageRegion Executive *EFStapler U2RightL
*UIConstraints: *EFStapler U2RightL *PageRegion Executive
*UIConstraints: *PageSize Executive *EFStapler UStitch
*UIConstraints: *EFStapler UStitch *PageSize Executive
*UIConstraints: *PageRegion Executive *EFStapler UStitch
*UIConstraints: *EFStapler UStitch *PageRegion Executive
*UIConstraints: *PageSize Executive *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *PageSize Executive
*UIConstraints: *PageRegion Executive *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *PageRegion Executive
*UIConstraints: *PageSize Legal *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageSize Legal
*UIConstraints: *PageRegion Legal *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageRegion Legal
*UIConstraints: *PageSize Legal *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageSize Legal
*UIConstraints: *PageRegion Legal *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageRegion Legal
*UIConstraints: *PageSize Legal *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageSize Legal
*UIConstraints: *PageRegion Legal *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageRegion Legal
*UIConstraints: *PageSize Legal *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageSize Legal
*UIConstraints: *PageRegion Legal *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageRegion Legal
*UIConstraints: *PageSize Legal *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageSize Legal
*UIConstraints: *PageRegion Legal *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageRegion Legal
*UIConstraints: *PageSize Legal *EFStapler U2TopP
*UIConstraints: *EFStapler U2TopP *PageSize Legal
*UIConstraints: *PageRegion Legal *EFStapler U2TopP
*UIConstraints: *EFStapler U2TopP *PageRegion Legal
*UIConstraints: *PageSize Legal *EFStapler U2TopL
*UIConstraints: *EFStapler U2TopL *PageSize Legal
*UIConstraints: *PageRegion Legal *EFStapler U2TopL
*UIConstraints: *EFStapler U2TopL *PageRegion Legal
*UIConstraints: *PageSize Legal *EFStapler U2LeftP
*UIConstraints: *EFStapler U2LeftP *PageSize Legal
*UIConstraints: *PageRegion Legal *EFStapler U2LeftP
*UIConstraints: *EFStapler U2LeftP *PageRegion Legal
*UIConstraints: *PageSize Legal *EFStapler U2LeftL
*UIConstraints: *EFStapler U2LeftL *PageSize Legal
*UIConstraints: *PageRegion Legal *EFStapler U2LeftL
*UIConstraints: *EFStapler U2LeftL *PageRegion Legal
*UIConstraints: *PageSize Legal *EFStapler U2RightP
*UIConstraints: *EFStapler U2RightP *PageSize Legal
*UIConstraints: *PageRegion Legal *EFStapler U2RightP
*UIConstraints: *EFStapler U2RightP *PageRegion Legal
*UIConstraints: *PageSize Legal *EFStapler U2RightL
*UIConstraints: *EFStapler U2RightL *PageSize Legal
*UIConstraints: *PageRegion Legal *EFStapler U2RightL
*UIConstraints: *EFStapler U2RightL *PageRegion Legal
*UIConstraints: *PageSize Legal *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *PageSize Legal
*UIConstraints: *PageRegion Legal *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *PageRegion Legal
*UIConstraints: *PageSize SRA3 *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageSize SRA3
*UIConstraints: *PageRegion SRA3 *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageRegion SRA3
*UIConstraints: *PageSize SRA3 *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageSize SRA3
*UIConstraints: *PageRegion SRA3 *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageRegion SRA3
*UIConstraints: *PageSize SRA3 *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageSize SRA3
*UIConstraints: *PageRegion SRA3 *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageRegion SRA3
*UIConstraints: *PageSize SRA3 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageSize SRA3
*UIConstraints: *PageRegion SRA3 *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageRegion SRA3
*UIConstraints: *PageSize SRA3 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageSize SRA3
*UIConstraints: *PageRegion SRA3 *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageRegion SRA3
*UIConstraints: *PageSize SRA3 *EFSort CollateWithShift
*UIConstraints: *EFSort CollateWithShift *PageSize SRA3
*UIConstraints: *PageRegion SRA3 *EFSort CollateWithShift
*UIConstraints: *EFSort CollateWithShift *PageRegion SRA3
*UIConstraints: *PageSize SRA3 *EFSort GroupWithShift
*UIConstraints: *EFSort GroupWithShift *PageSize SRA3
*UIConstraints: *PageRegion SRA3 *EFSort GroupWithShift
*UIConstraints: *EFSort GroupWithShift *PageRegion SRA3
*UIConstraints: *PageSize SRA3 *EFStapler
*UIConstraints: *EFStapler *PageSize SRA3
*UIConstraints: *PageRegion SRA3 *EFStapler
*UIConstraints: *EFStapler *PageRegion SRA3
*UIConstraints: *PageSize SRA3 *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *PageSize SRA3
*UIConstraints: *PageRegion SRA3 *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *PageRegion SRA3
*UIConstraints: *PageSize Statement *InputSlot Tray5
*UIConstraints: *InputSlot Tray5 *PageSize Statement
*UIConstraints: *PageRegion Statement *InputSlot Tray5
*UIConstraints: *InputSlot Tray5 *PageRegion Statement
*UIConstraints: *PageSize Statement *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageSize Statement
*UIConstraints: *PageRegion Statement *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageRegion Statement
*UIConstraints: *PageSize Statement *EFCoverTray Tray5
*UIConstraints: *EFCoverTray Tray5 *PageSize Statement
*UIConstraints: *PageRegion Statement *EFCoverTray Tray5
*UIConstraints: *EFCoverTray Tray5 *PageRegion Statement
*UIConstraints: *PageSize Statement *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageSize Statement
*UIConstraints: *PageRegion Statement *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageRegion Statement
*UIConstraints: *PageSize Statement *EFBkCoverTray Tray5
*UIConstraints: *EFBkCoverTray Tray5 *PageSize Statement
*UIConstraints: *PageRegion Statement *EFBkCoverTray Tray5
*UIConstraints: *EFBkCoverTray Tray5 *PageRegion Statement
*UIConstraints: *PageSize Statement *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageSize Statement
*UIConstraints: *PageRegion Statement *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageRegion Statement
*UIConstraints: *PageSize Statement *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageSize Statement
*UIConstraints: *PageRegion Statement *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageRegion Statement
*UIConstraints: *PageSize Statement *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageSize Statement
*UIConstraints: *PageRegion Statement *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageRegion Statement
*UIConstraints: *PageSize Statement *EFSort CollateWithShift
*UIConstraints: *EFSort CollateWithShift *PageSize Statement
*UIConstraints: *PageRegion Statement *EFSort CollateWithShift
*UIConstraints: *EFSort CollateWithShift *PageRegion Statement
*UIConstraints: *PageSize Statement *EFSort GroupWithShift
*UIConstraints: *EFSort GroupWithShift *PageSize Statement
*UIConstraints: *PageRegion Statement *EFSort GroupWithShift
*UIConstraints: *EFSort GroupWithShift *PageRegion Statement
*UIConstraints: *PageSize Statement *EFStapler U1LeftP
*UIConstraints: *EFStapler U1LeftP *PageSize Statement
*UIConstraints: *PageRegion Statement *EFStapler U1LeftP
*UIConstraints: *EFStapler U1LeftP *PageRegion Statement
*UIConstraints: *PageSize Statement *EFStapler U1LeftL
*UIConstraints: *EFStapler U1LeftL *PageSize Statement
*UIConstraints: *PageRegion Statement *EFStapler U1LeftL
*UIConstraints: *EFStapler U1LeftL *PageRegion Statement
*UIConstraints: *PageSize Statement *EFStapler U1RightP
*UIConstraints: *EFStapler U1RightP *PageSize Statement
*UIConstraints: *PageRegion Statement *EFStapler U1RightP
*UIConstraints: *EFStapler U1RightP *PageRegion Statement
*UIConstraints: *PageSize Statement *EFStapler U1RightL
*UIConstraints: *EFStapler U1RightL *PageSize Statement
*UIConstraints: *PageRegion Statement *EFStapler U1RightL
*UIConstraints: *EFStapler U1RightL *PageRegion Statement
*UIConstraints: *PageSize Statement *EFStapler U2TopP
*UIConstraints: *EFStapler U2TopP *PageSize Statement
*UIConstraints: *PageRegion Statement *EFStapler U2TopP
*UIConstraints: *EFStapler U2TopP *PageRegion Statement
*UIConstraints: *PageSize Statement *EFStapler U2TopL
*UIConstraints: *EFStapler U2TopL *PageSize Statement
*UIConstraints: *PageRegion Statement *EFStapler U2TopL
*UIConstraints: *EFStapler U2TopL *PageRegion Statement
*UIConstraints: *PageSize Statement *EFStapler U2LeftP
*UIConstraints: *EFStapler U2LeftP *PageSize Statement
*UIConstraints: *PageRegion Statement *EFStapler U2LeftP
*UIConstraints: *EFStapler U2LeftP *PageRegion Statement
*UIConstraints: *PageSize Statement *EFStapler U2LeftL
*UIConstraints: *EFStapler U2LeftL *PageSize Statement
*UIConstraints: *PageRegion Statement *EFStapler U2LeftL
*UIConstraints: *EFStapler U2LeftL *PageRegion Statement
*UIConstraints: *PageSize Statement *EFStapler U2RightP
*UIConstraints: *EFStapler U2RightP *PageSize Statement
*UIConstraints: *PageRegion Statement *EFStapler U2RightP
*UIConstraints: *EFStapler U2RightP *PageRegion Statement
*UIConstraints: *PageSize Statement *EFStapler U2RightL
*UIConstraints: *EFStapler U2RightL *PageSize Statement
*UIConstraints: *PageRegion Statement *EFStapler U2RightL
*UIConstraints: *EFStapler U2RightL *PageRegion Statement
*UIConstraints: *PageSize Statement *EFCopierBooklet HalfLeftBinding
*UIConstraints: *EFCopierBooklet HalfLeftBinding *PageSize Statement
*UIConstraints: *PageRegion Statement *EFCopierBooklet HalfLeftBinding
*UIConstraints: *EFCopierBooklet HalfLeftBinding *PageRegion Statement
*UIConstraints: *PageSize Statement *EFCopierBooklet HalfLeftBindingLegal
*UIConstraints: *EFCopierBooklet HalfLeftBindingLegal *PageSize Statement
*UIConstraints: *PageRegion Statement *EFCopierBooklet HalfLeftBindingLegal
*UIConstraints: *EFCopierBooklet HalfLeftBindingLegal *PageRegion Statement
*UIConstraints: *PageSize Tabloid *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageSize Tabloid
*UIConstraints: *PageRegion Tabloid *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageRegion Tabloid
*UIConstraints: *PageSize Tabloid *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageSize Tabloid
*UIConstraints: *PageRegion Tabloid *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageRegion Tabloid
*UIConstraints: *PageSize Tabloid *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageSize Tabloid
*UIConstraints: *PageRegion Tabloid *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageRegion Tabloid
*UIConstraints: *PageSize Tabloid *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageSize Tabloid
*UIConstraints: *PageRegion Tabloid *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageRegion Tabloid
*UIConstraints: *PageSize Tabloid *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageSize Tabloid
*UIConstraints: *PageRegion Tabloid *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageRegion Tabloid
*UIConstraints: *PageSize Tabloid *EFStapler U2TopL
*UIConstraints: *EFStapler U2TopL *PageSize Tabloid
*UIConstraints: *PageRegion Tabloid *EFStapler U2TopL
*UIConstraints: *EFStapler U2TopL *PageRegion Tabloid
*UIConstraints: *PageSize Tabloid *EFStapler U2LeftP
*UIConstraints: *EFStapler U2LeftP *PageSize Tabloid
*UIConstraints: *PageRegion Tabloid *EFStapler U2LeftP
*UIConstraints: *EFStapler U2LeftP *PageRegion Tabloid
*UIConstraints: *PageSize Tabloid *EFStapler U2RightP
*UIConstraints: *EFStapler U2RightP *PageSize Tabloid
*UIConstraints: *PageRegion Tabloid *EFStapler U2RightP
*UIConstraints: *EFStapler U2RightP *PageRegion Tabloid
*UIConstraints: *PageSize Tabloid *EFCopierBooklet LeftBinding
*UIConstraints: *EFCopierBooklet LeftBinding *PageSize Tabloid
*UIConstraints: *PageRegion Tabloid *EFCopierBooklet LeftBinding
*UIConstraints: *EFCopierBooklet LeftBinding *PageRegion Tabloid
*UIConstraints: *PageSize Tabloid *EFCopierBooklet LeftBindingLegal
*UIConstraints: *EFCopierBooklet LeftBindingLegal *PageSize Tabloid
*UIConstraints: *PageRegion Tabloid *EFCopierBooklet LeftBindingLegal
*UIConstraints: *EFCopierBooklet LeftBindingLegal *PageRegion Tabloid
*UIConstraints: *PageSize Tabloid *EFCopierBooklet HalfLeftBindingLegal
*UIConstraints: *EFCopierBooklet HalfLeftBindingLegal *PageSize Tabloid
*UIConstraints: *PageRegion Tabloid *EFCopierBooklet HalfLeftBindingLegal
*UIConstraints: *EFCopierBooklet HalfLeftBindingLegal *PageRegion Tabloid
*UIConstraints: *PageSize TabloidExtra *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageSize TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *InputSlot Tray6
*UIConstraints: *InputSlot Tray6 *PageRegion TabloidExtra
*UIConstraints: *PageSize TabloidExtra *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageSize TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *EFCoverTray Tray6
*UIConstraints: *EFCoverTray Tray6 *PageRegion TabloidExtra
*UIConstraints: *PageSize TabloidExtra *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageSize TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *EFBkCoverTray Tray6
*UIConstraints: *EFBkCoverTray Tray6 *PageRegion TabloidExtra
*UIConstraints: *PageSize TabloidExtra *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageSize TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *EFSort CrossCollate
*UIConstraints: *EFSort CrossCollate *PageRegion TabloidExtra
*UIConstraints: *PageSize TabloidExtra *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageSize TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *EFSort CrossGroup
*UIConstraints: *EFSort CrossGroup *PageRegion TabloidExtra
*UIConstraints: *PageSize TabloidExtra *EFSort CollateWithShift
*UIConstraints: *EFSort CollateWithShift *PageSize TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *EFSort CollateWithShift
*UIConstraints: *EFSort CollateWithShift *PageRegion TabloidExtra
*UIConstraints: *PageSize TabloidExtra *EFSort GroupWithShift
*UIConstraints: *EFSort GroupWithShift *PageSize TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *EFSort GroupWithShift
*UIConstraints: *EFSort GroupWithShift *PageRegion TabloidExtra
*UIConstraints: *PageSize TabloidExtra *EFStapler U1LeftP
*UIConstraints: *EFStapler U1LeftP *PageSize TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *EFStapler U1LeftP
*UIConstraints: *EFStapler U1LeftP *PageRegion TabloidExtra
*UIConstraints: *PageSize TabloidExtra *EFStapler U1LeftL
*UIConstraints: *EFStapler U1LeftL *PageSize TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *EFStapler U1LeftL
*UIConstraints: *EFStapler U1LeftL *PageRegion TabloidExtra
*UIConstraints: *PageSize TabloidExtra *EFStapler U1RightP
*UIConstraints: *EFStapler U1RightP *PageSize TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *EFStapler U1RightP
*UIConstraints: *EFStapler U1RightP *PageRegion TabloidExtra
*UIConstraints: *PageSize TabloidExtra *EFStapler U1RightL
*UIConstraints: *EFStapler U1RightL *PageSize TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *EFStapler U1RightL
*UIConstraints: *EFStapler U1RightL *PageRegion TabloidExtra
*UIConstraints: *PageSize TabloidExtra *EFStapler U2TopP
*UIConstraints: *EFStapler U2TopP *PageSize TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *EFStapler U2TopP
*UIConstraints: *EFStapler U2TopP *PageRegion TabloidExtra
*UIConstraints: *PageSize TabloidExtra *EFStapler U2TopL
*UIConstraints: *EFStapler U2TopL *PageSize TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *EFStapler U2TopL
*UIConstraints: *EFStapler U2TopL *PageRegion TabloidExtra
*UIConstraints: *PageSize TabloidExtra *EFStapler U2LeftP
*UIConstraints: *EFStapler U2LeftP *PageSize TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *EFStapler U2LeftP
*UIConstraints: *EFStapler U2LeftP *PageRegion TabloidExtra
*UIConstraints: *PageSize TabloidExtra *EFStapler U2LeftL
*UIConstraints: *EFStapler U2LeftL *PageSize TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *EFStapler U2LeftL
*UIConstraints: *EFStapler U2LeftL *PageRegion TabloidExtra
*UIConstraints: *PageSize TabloidExtra *EFStapler U2RightP
*UIConstraints: *EFStapler U2RightP *PageSize TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *EFStapler U2RightP
*UIConstraints: *EFStapler U2RightP *PageRegion TabloidExtra
*UIConstraints: *PageSize TabloidExtra *EFStapler U2RightL
*UIConstraints: *EFStapler U2RightL *PageSize TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *EFStapler U2RightL
*UIConstraints: *EFStapler U2RightL *PageRegion TabloidExtra
*UIConstraints: *PageSize TabloidExtra *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *PageSize TabloidExtra
*UIConstraints: *PageRegion TabloidExtra *EFCopierBooklet
*UIConstraints: *EFCopierBooklet *PageRegion TabloidExtra

*% ========== NonUIConstraints ==========

*NonUIConstraints: *CustomPageSize True *EFSort CrossCollate
*NonUIConstraints: *EFSort CrossCollate *CustomPageSize True
*NonUIConstraints: *CustomPageSize True *EFSort CrossGroup
*NonUIConstraints: *EFSort CrossGroup *CustomPageSize True
*NonUIConstraints: *CustomPageSize True *EFSort CollateWithShift
*NonUIConstraints: *EFSort CollateWithShift *CustomPageSize True
*NonUIConstraints: *CustomPageSize True *EFSort GroupWithShift
*NonUIConstraints: *EFSort GroupWithShift *CustomPageSize True
*NonUIConstraints: *CustomPageSize True *EFTrayAlignment True
*NonUIConstraints: *EFTrayAlignment True *CustomPageSize True
*NonUIConstraints: *CustomPageSize True *EFCopierBooklet
*NonUIConstraints: *EFCopierBooklet *CustomPageSize True

*NonUIConstraints: *CustomPageSize True *EFMMInsType Tab
*NonUIConstraints: *EFMMInsType Tab *CustomPageSize True

*% ========== General Information ==========

*DefaultResolution: 600dpi
*Throughput: "33"
*LanguageLevel: "3"
*TTRasterizer: Type42
*ColorDevice: True
*DefaultColorSpace: CMYK
*FreeVM: "15728640"
*PrintPSErrors: True
*ContoneOnly: True
*FCacheSize None: 524288
*RequiresPageRegion All: True
*LandscapeOrientation: Plus90

*% ========== Mixed Media ==========

*% ****** Enable MM1.2 & MM1.3
*% ****** Enable MM1.3
*%EFIKey [ : ][EFMixedMedia:string]
*%EFIKeyAttribute [EFMixedMedia][version:13]
*%EFIValue [EFMixedMedia:CWS]
*%EFIValue [EFMixedMedia:driver]
*% ***** Enable MM1.2
*% *****
*% ***** Enable Paper Catalog 3.5
*%EFIKey [ : ][EFPaperCatalog:string]
*%EFIKeyAttribute [EFPaperCatalog][version:35]
*%EFIValue [EFPaperCatalog:CWS]
*% ***** Enable chapters
*%EFIKey [ : ][EFEnableChapter:string]
*%EFIValue [EFEnableChapter:CWS]
*%EFIValue [EFEnableChapter:driver]
*% ***** Enable Subset finishing
*%EFIKey [ : ][EFEnableSubsetFinishing:string]
*%EFIValue [EFEnableSubsetFinishing:CWS]
*%EFIValue [EFEnableSubsetFinishing:driver]
*% ***** Enable Mixed Media Insertions
*%EFIKey [ : ][EFEnableMixedMediaInsertion:string]
*%EFIValue [EFEnableMixedMediaInsertion:CWS]
*%EFIValue [EFEnableMixedMediaInsertion:driver]
*% ***** Enable Constraint Enforcement
*%EFIKey [ : ][EFMixedMediaEnforceConstraints:string]
*%EFIValue [EFMixedMediaEnforceConstraints:CWS]
*%EFIValue [EFMixedMediaEnforceConstraints:driver]
*% ***** Enable Cover Page
*%EFIKey [ : ][EFEnableMixedMediaCoverPages:string]
*%EFIValue [EFEnableMixedMediaCoverPages:CWS]
*%EFIValue [EFEnableMixedMediaCoverPages:driver]
*% ***** Enable Tab Handling
*%EFIKey [ : ][EFEnableMixedMediaTabs:string]
*%EFIValue [EFEnableMixedMediaTabs:CWS]

*%EFIFlags *EFMMInUse Command
*%EFIGroup *EFMMInUse FPPaperSource/Media
*OpenUI *EFMMInUse/Mixed Media In Use:Boolean
*OrderDependency: 50.0 AnySetup *EFMMInUse
*DefaultEFMMInUse: False
*EFMMInUse False/No: ""
*EFMMInUse True/Yes: ""
*CloseUI: *EFMMInUse

*%EFIFlags *EFMMInsType Command
*%EFIGroup *EFMMInsType FPPaperSource/Media
*OpenUI *EFMMInsType/Mixed Media Insertion Type:PickOne
*OrderDependency: 50.0 AnySetup *EFMMInsType
*DefaultEFMMInsType: None
*EFMMInsType None/None: ""
*EFMMInsType Blank/Blank: ""
*EFMMInsType Tab/Tab: ""
*CloseUI: *EFMMInsType

*%EFIFlags *EFMMCover Command|MMCover
*%EFIGroup *EFMMCover FPPaperSource/Media
*OpenUI *EFMMCover/Cover Page Mode:PickOne
*OrderDependency: 50.0 AnySetup *EFMMCover
*DefaultEFMMCover: PrintFront
*EFMMCover PrintFront/Print on Front Only: ""
*EFMMCover PrintBack/Print on Back Only: ""
*EFMMCover PrintBoth/Print on Both Sides: ""
*CloseUI: *EFMMCover

*% ========== UI Menus ==========

*%EFIFlags *EFColorMode Column|Command|Impose|Rerip|Spooler
*%EFIGroup *EFColorMode FPColorWise/Color
*OpenUI *EFColorMode/Color Mode:PickOne
*OrderDependency: 12.0 AnySetup *EFColorMode
*DefaultEFColorMode: EFColorModeDEF
*EFColorMode EFColorModeDEF/Printer's default: ""
*EFColorMode CMYK/CMYK: " userdict /XJXsetcolormode known
{ (CMYK) XJXsetcolormode} if "
*End
*EFColorMode Grayscale/Grayscale: " userdict /XJXsetcolormode known
{ (Grayscale) XJXsetcolormode} if "
*End
*?EFColorMode: " currentpagedevice /ProcessColorModel known
{currentpagedevice /ProcessColorModel get == } if "
*End
*CloseUI: *EFColorMode

*%EFIFlags *EFRGBOverride ColorSetup|Command|Dynamic|Impose|Rerip|Spooler
*%EFIGroup *EFRGBOverride FPColorWise/Color
*OpenUI *EFRGBOverride/RGB Source Profile:PickOne
*OrderDependency: 56.0 AnySetup *EFRGBOverride
*DefaultEFRGBOverride: EFRGBOverrideDEF
*EFRGBOverride NONE/None: " /XJXsetRGBOverride where
{ pop (Off) XJXsetRGBOverride } if  "
*End
*EFRGBOverride EFRGBOverrideDEF/Printer's default: " "
*EFRGBOverride APPLE13/Apple Standard: "  /XJXsetRGBOverride where 
{ pop (APPLE13) XJXsetRGBOverride } if "
*End
*EFRGBOverride SRGB/sRGB (PC): " /XJXsetRGBOverride where
{ pop (SRGB) XJXsetRGBOverride } if "
*End
*EFRGBOverride ADOBERGB/Adobe RGB (1998): " /XJXsetRGBOverride where
{ pop (ADOBERGB) XJXsetRGBOverride } if "
*End
*EFRGBOverride ECIRGB/ECI-RGB: " /XJXsetRGBOverride where
{ pop (ECIRGB) XJXsetRGBOverride } if "
*End
*EFRGBOverride FIERYRGB/Fiery RGB: " /XJXsetRGBOverride where
                { pop (FIERYRGB) XJXsetRGBOverride } if "
*End
*EFRGBOverride EFIRGB/EFIRGB: " /XJXsetRGBOverride where
{ pop (EFIRGB) XJXsetRGBOverride } if "
*End
*EFRGBOverride RGB1/Source-1: " /XJXsetRGBOverride where
{ pop (RGB1) XJXsetRGBOverride } if "
*End
*EFRGBOverride RGB2/Source-2: " /XJXsetRGBOverride where
{ pop (RGB2) XJXsetRGBOverride } if "
*End
*EFRGBOverride RGB3/Source-3: " /XJXsetRGBOverride where
{ pop (RGB3) XJXsetRGBOverride } if "
*End
*EFRGBOverride RGB4/Source-4: " /XJXsetRGBOverride where
{ pop (RGB4) XJXsetRGBOverride } if "
*End
*EFRGBOverride RGB5/Source-5: " /XJXsetRGBOverride where
{ pop (RGB5) XJXsetRGBOverride } if "
*End
*EFRGBOverride RGB6/Source-6: " /XJXsetRGBOverride where
{ pop (RGB6) XJXsetRGBOverride } if "
*End
*EFRGBOverride RGB7/Source-7: " /XJXsetRGBOverride where
{ pop (RGB7) XJXsetRGBOverride } if "
*End
*EFRGBOverride RGB8/Source-8: " /XJXsetRGBOverride where
{ pop (RGB8) XJXsetRGBOverride } if "
*End
*EFRGBOverride RGB9/Source-9: " /XJXsetRGBOverride where
{ pop (RGB9) XJXsetRGBOverride } if "
*End
*EFRGBOverride RGB10/Source-10: " /XJXsetRGBOverride where
{ pop (RGB10) XJXsetRGBOverride } if "
*End
*CloseUI: *EFRGBOverride

*%EFIFlags *EFColorRendDict ColorSetup|Column|Command|Dynamic|Impose|Rerip|Spooler
*%EFIGroup *EFColorRendDict FPColorWise/Color
*OpenUI *EFColorRendDict/Rendering Style:PickOne
*OrderDependency: 54.0 AnySetup *EFColorRendDict
*DefaultEFColorRendDict: EFColorRendDictDEF
*EFColorRendDict EFColorRendDictDEF/Printer's default: " "
*EFColorRendDict PHOTOGRAPHIC/Photographic: " userdict /XJXsetrenderingintent known 
{ (Photographic) XJXsetrenderingintent } if "
*End
*EFColorRendDict PRESENTATION/Presentation: " userdict /XJXsetrenderingintent known 
{ (Presentation) XJXsetrenderingintent } if "
*End
*EFColorRendDict RELATIVE/Relative Colorimetric: " userdict /XJXsetrenderingintent known 
{ (Relative) XJXsetrenderingintent } if "
*End
*EFColorRendDict ABSOLUTE/Absolute Colorimetric: " userdict /XJXsetrenderingintent known 
{ (Absolute) XJXsetrenderingintent } if "
*End
*?EFColorRendDict: " FieryXJdict /CB_GetRenderingIntent known   
{ FieryXJdict /CB_GetRenderingIntent get exec == } if "
*End
*CloseUI: *EFColorRendDict

*%EFIFlags *EFRGBSep Command|Dynamic|Impose|Rerip|Spooler
*%EFIGroup *EFRGBSep FPColorWise/Color
*OpenUI *EFRGBSep/RGB Separation:PickOne
*OrderDependency: 56.5 AnySetup *EFRGBSep
*DefaultEFRGBSep: EFRGBSepDEF
*EFRGBSep EFRGBSepDEF/Printer's default: " "
*EFRGBSep SEPSIM/Simulation: " /XJXsetRGBSeparation where{ pop (True) XJXsetRGBSeparation } if "
*EFRGBSep SEPOUT/Output: " /XJXsetRGBSeparation where{ pop (False) XJXsetRGBSeparation } if "
*CloseUI: *EFRGBSep

*%EFIFlags *EFSimulation ColorSetup|Command|Dynamic|Impose|Rerip|Spooler
*%EFIGroup *EFSimulation FPColorWise/Color
*OpenUI *EFSimulation/CMYK Simulation Profile:PickOne
*OrderDependency: 57.0 AnySetup *EFSimulation
*DefaultEFSimulation: EFSimulationDEF
*EFSimulation NONE/None: "  /XJXsetSimulation where
{ pop (.None) XJXsetSimulation } if "
*End
*EFSimulation EFSimulationDEF/Printer's default: " "
*EFSimulation DIC/DIC(EFI): " /XJXsetSimulation where
{ pop (DIC) XJXsetSimulation } if "
*End
*EFSimulation EUROSCALE/Euroscale(EFI): " /XJXsetSimulation where
{ pop (Euroscale) XJXsetSimulation } if "
*End
*EFSimulation ISOCOATED/ISO Coated: " /XJXsetSimulation where
{ pop (ISOCoated) XJXsetSimulation } if "
*End
*EFSimulation ISOUNCOATED/ISO Uncoated: " /XJXsetSimulation where
{ pop (ISOUncoated) XJXsetSimulation } if "
*End
*EFSimulation JMPA/JMPA ver.2(EFI): " /XJXsetSimulation where
{ pop (JMPA) XJXsetSimulation } if "
*End
*EFSimulation JCOLOR/Japan Color 2001 type1(EFI): " /XJXsetSimulation where
{ pop (JCOLOR) XJXsetSimulation } if "
*End
*EFSimulation SWOPCOATED/SWOP-Coated(EFI): " /XJXsetSimulation where
{ pop (SWOP-Coated) XJXsetSimulation } if "
*End
*EFSimulation TOYOCOATED/TOYO Offset Coated 2.0: " /XJXsetSimulation where
{ pop (TOYOCOATED) XJXsetSimulation } if "
*End
*EFSimulation CUSTOM1/Simulation-1: " /XJXsetSimulation where
{ pop (Custom-1) XJXsetSimulation } if "
*End
*EFSimulation CUSTOM2/Simulation-2: " /XJXsetSimulation where
{ pop (Custom-2) XJXsetSimulation } if "
*End
*EFSimulation CUSTOM3/Simulation-3: " /XJXsetSimulation where
{ pop (Custom-3) XJXsetSimulation } if "
*End
*EFSimulation CUSTOM4/Simulation-4: " /XJXsetSimulation where
{ pop (Custom-4) XJXsetSimulation } if "
*End
*EFSimulation CUSTOM5/Simulation-5: " /XJXsetSimulation where
{ pop (Custom-5) XJXsetSimulation } if "
*End
*EFSimulation CUSTOM6/Simulation-6: " /XJXsetSimulation where
{ pop (Custom-6) XJXsetSimulation } if "
*End
*EFSimulation CUSTOM7/Simulation-7: " /XJXsetSimulation where
{ pop (Custom-7) XJXsetSimulation } if "
*End
*EFSimulation CUSTOM8/Simulation-8: " /XJXsetSimulation where
{ pop (Custom-8) XJXsetSimulation } if "
*End
*EFSimulation CUSTOM9/Simulation-9: " /XJXsetSimulation where
{ pop (Custom-9) XJXsetSimulation } if "
*End
*EFSimulation CUSTOM10/Simulation-10: " /XJXsetSimulation where
{ pop (Custom-10) XJXsetSimulation } if "
*End
*EFSimulation MATCHCOPY/ColorWise OFF: " /XJXsetSimulation where
{ pop (.MatchCopy) XJXsetSimulation } if "
*End
*CloseUI: *EFSimulation

*%EFIFlags *EFSimSpeed ColorSetup|Command|Dynamic|Impose|Rerip|Spooler
*%EFIGroup *EFSimSpeed FPColorWise/Color
*OpenUI *EFSimSpeed/CMYK Simulation Method:PickOne
*OrderDependency: 58.0 AnySetup *EFSimSpeed
*DefaultEFSimSpeed: EFSimSpeedDEF
*EFSimSpeed EFSimSpeedDEF/Printer's default: " "
*EFSimSpeed FAST/Quick: " /XJXsetSimSpeed where
{ pop (Quick) XJXsetSimSpeed } if "
*End
*EFSimSpeed BETR/Full (Source GCR): " /XJXsetSimSpeed where
{ pop (Full) XJXsetSimSpeed } if  "
*End
*EFSimSpeed S4X4/Full (Output GCR): " /XJXsetSimSpeed where
{ pop (4x4) XJXsetSimSpeed } if  "
*End
*CloseUI: *EFSimSpeed

*%EFIFlags *EFOutProfile ColorSetup|Command|Dynamic|Rerip|Spooler|Impose
*%EFIGroup *EFOutProfile FPColorWise/Color
*OpenUI *EFOutProfile/Output Profile:PickOne
*OrderDependency: 58.5 AnySetup *EFOutProfile
*DefaultEFOutProfile: EFOutProfileDEF
*EFOutProfile DEFAULT_MEDIA/Use Media Defined Profile: " /XJXsetOutputProfile where{ pop (DEFAULT_MEDIA) XJXsetOutputProfile } if "
*EFOutProfile EFOutProfileDEF/Use Server's Default: " /XJXsetOutputProfile where{ pop (DEFAULT) XJXsetOutputProfile } if "
*EFOutProfile OUT1/Output-1: " /XJXsetOutputProfile where{ pop (OUT1) XJXsetOutputProfile } if "
*EFOutProfile OUT2/Output-2: " /XJXsetOutputProfile where{ pop (OUT2) XJXsetOutputProfile } if "
*EFOutProfile OUT3/Output-3: " /XJXsetOutputProfile where{ pop (OUT3) XJXsetOutputProfile } if "
*EFOutProfile OUT4/Output-4: " /XJXsetOutputProfile where{ pop (OUT4) XJXsetOutputProfile } if "
*EFOutProfile OUT5/Output-5: " /XJXsetOutputProfile where{ pop (OUT5) XJXsetOutputProfile } if "
*EFOutProfile OUT6/Output-6: " /XJXsetOutputProfile where{ pop (OUT6) XJXsetOutputProfile } if "
*EFOutProfile OUT7/Output-7: " /XJXsetOutputProfile where{ pop (OUT7) XJXsetOutputProfile } if "
*EFOutProfile OUT8/Output-8: " /XJXsetOutputProfile where{ pop (OUT8) XJXsetOutputProfile } if "
*EFOutProfile OUT9/Output-9: " /XJXsetOutputProfile where{ pop (OUT9) XJXsetOutputProfile } if "
*EFOutProfile OUT10/Output-10: " /XJXsetOutputProfile where{ pop (OUT10) XJXsetOutputProfile } if "
*CloseUI: *EFOutProfile

*%EFIFlags *EFSpotColors ColorSetup|Command|Dynamic|Impose|Rerip|Spooler
*%EFIGroup *EFSpotColors FPColorWise/Color
*OpenUI *EFSpotColors/Spot Color Matching:PickOne
*OrderDependency: 61.0 AnySetup *EFSpotColors
*DefaultEFSpotColors: EFSpotColorsDEF
*EFSpotColors EFSpotColorsDEF/Printer's default: " "
*EFSpotColors OFF/Off: " /XJXsetSpotColors where{ pop (False) XJXsetSpotColors } if "
*EFSpotColors ON/On: " /XJXsetSpotColors where{ pop (True) XJXsetSpotColors } if "
*CloseUI: *EFSpotColors

*%EFIFlags *EFPureBlack ColorSetup|Command|Dynamic|Impose|Rerip|Spooler
*%EFIGroup *EFPureBlack FPColorWise/Color
*OpenUI *EFPureBlack/Black Text/Graphics:PickOne
*OrderDependency: 59.0 AnySetup *EFPureBlack
*DefaultEFPureBlack: EFPureBlackDEF
*EFPureBlack EFPureBlackDEF/Printer's default: ""
*EFPureBlack BLACKPUREON/Pure Black On: " userdict /XJXsetBlackControl known { 1 XJXsetBlackControl } if"
*EFPureBlack BLACKRICHON/Rich Black On: " userdict /XJXsetBlackControl known {  3 XJXsetBlackControl } if"
*EFPureBlack BLACKNORMAL/Normal: " userdict /XJXsetBlackControl known { 0 XJXsetBlackControl } if"
*CloseUI: *EFPureBlack

*%EFIFlags *EFBlkOvpCtrl ColorSetup|Command|Dynamic|Impose|Rerip|Spooler
*%EFIGroup *EFBlkOvpCtrl FPColorWise/Color
*OpenUI *EFBlkOvpCtrl/Black Overprint:PickOne
*OrderDependency: 60.0 AnySetup *EFBlkOvpCtrl
*DefaultEFBlkOvpCtrl: EFBlkOvpCtrlDEF
*EFBlkOvpCtrl EFBlkOvpCtrlDEF/Printer's default: " "
*EFBlkOvpCtrl OFF/Off: " /XJXsetBlkOverprint where{ pop (False) XJXsetBlkOverprint } if "
*EFBlkOvpCtrl TEXTONLY/Text: " /XJXsetBlkOverprint where { pop (True) XJXsetBlkOverprint } if
/XJXSetBlkGraphicsOVP where { pop false XJXSetBlkGraphicsOVP } if "
*End
*EFBlkOvpCtrl TEXTGRAPHICS/Text/Graphics: " /XJXsetBlkOverprint where { pop (True) XJXsetBlkOverprint } if
/XJXSetBlkGraphicsOVP where { pop true XJXSetBlkGraphicsOVP } if "
*End
*CloseUI: *EFBlkOvpCtrl

*%EFIFlags *EFCompOverprint Command|Impose|Rerip|Spooler
*%EFIGroup *EFCompOverprint FPColorWise/Color
*OpenUI *EFCompOverprint/Composite Overprint:Boolean
*OrderDependency: 50.0 AnySetup *EFCompOverprint
*DefaultEFCompOverprint: False
*EFCompOverprint False/Off: " /XJXsetCompositeOverprint where { pop false XJXsetCompositeOverprint } if "
*EFCompOverprint True/On: " /XJXsetCompositeOverprint where { pop true XJXsetCompositeOverprint
} if "
*End
*CloseUI: *EFCompOverprint

*%EFIFlags *EFKOnlyGrayCMYK ColorSetup|Command|Dynamic|Impose|Rerip|Spooler
*%EFIGroup *EFKOnlyGrayCMYK FPColorWise/Color
*OpenUI *EFKOnlyGrayCMYK/Print Gray as Black(CMYK):PickOne
*OrderDependency: 50.0 AnySetup *EFKOnlyGrayCMYK
*DefaultEFKOnlyGrayCMYK: EFKOnlyGrayCMYKDEF
*EFKOnlyGrayCMYK EFKOnlyGrayCMYKDEF/Printer's default: ""
*EFKOnlyGrayCMYK OFF/Off: " /XJXsetBlackOnlyGrayCMYK where { pop (OFF) XJXsetBlackOnlyGrayCMYK } if "
*EFKOnlyGrayCMYK TEXTGRAPHICS/Text/Graphics: " /XJXsetBlackOnlyGrayCMYK where { pop (TEXTGRAPHICS) XJXsetBlackOnlyGrayCMYK } if "
*EFKOnlyGrayCMYK TEXTGRAPHICSIMAG/Text/Graphics/Images: " /XJXsetBlackOnlyGrayCMYK where { pop (TEXTGRAPHICSIMAG) XJXsetBlackOnlyGrayCMYK } if "
*CloseUI: *EFKOnlyGrayCMYK

*%EFIFlags *EFKOnlyGrayRGB ColorSetup|Command|Dynamic|Impose|Rerip|Spooler
*%EFIGroup *EFKOnlyGrayRGB FPColorWise/Color
*OpenUI *EFKOnlyGrayRGB/Print Gray as Black(RGB):PickOne
*OrderDependency: 50.0 AnySetup *EFKOnlyGrayRGB
*DefaultEFKOnlyGrayRGB: EFKOnlyGrayRGBDEF
*EFKOnlyGrayRGB EFKOnlyGrayRGBDEF/Printer's default: ""
*EFKOnlyGrayRGB OFF/Off: " /XJXsetBlackOnlyGrayRGB where { pop (OFF) XJXsetBlackOnlyGrayRGB } if "
*EFKOnlyGrayRGB TEXTGRAPHICS/Text/Graphics: " /XJXsetBlackOnlyGrayRGB where { pop (TEXTGRAPHICS) XJXsetBlackOnlyGrayRGB } if "
*EFKOnlyGrayRGB TEXTGRAPHICSIMAG/Text/Graphics/Images: " /XJXsetBlackOnlyGrayRGB where { pop (TEXTGRAPHICSIMAG) XJXsetBlackOnlyGrayRGB } if "
*CloseUI: *EFKOnlyGrayRGB

*%EFIFlags *EFMltClrPrntMap Command|Impose|Rerip|Spooler
*%EFIGroup *EFMltClrPrntMap FPColorWise/Color
*OpenUI *EFMltClrPrntMap/Two-Color Print Mapping:Boolean
*OrderDependency: 50.0 AnySetup *EFMltClrPrntMap
*DefaultEFMltClrPrntMap: False
*EFMltClrPrntMap False/Off: " /XJXsetMultiColorPrintMapping where { pop false XJXsetMultiColorPrintMapping } if "
*EFMltClrPrntMap True/On: " /XJXsetMultiColorPrintMapping where { pop true
XJXsetMultiColorPrintMapping } if "
*End
*CloseUI: *EFMltClrPrntMap

*%EFIFlags *EFPaperSim ColorSetup|Command|Impose|Rerip|Spooler
*%EFIGroup *EFPaperSim FPColorWise/Color
*OpenUI *EFPaperSim/Paper Simulation:PickOne
*OrderDependency: 58.2 AnySetup *EFPaperSim
*DefaultEFPaperSim: OFF
*EFPaperSim OFF/Off: " /XJXsetPaperSimulation where
  { pop (False) XJXsetPaperSimulation } if "
*End
*EFPaperSim ON/On: " /XJXsetPaperSimulation where
  { pop (True) XJXsetPaperSimulation } if "
*End
*CloseUI: *EFPaperSim

*%EFIFlags *EFSubstColors Command|Impose|Rerip|Spooler
*%EFIGroup *EFSubstColors FPColorWise/Color
*OpenUI *EFSubstColors/Substitute Colors:Boolean
*OrderDependency: 61.1 AnySetup *EFSubstColors
*DefaultEFSubstColors: False
*EFSubstColors False/Off: " userdict /XJXsubstColors known { false XJXsubstColors } if "
*EFSubstColors True/On: " userdict /XJXsubstColors known { true XJXsubstColors } if "
*CloseUI: *EFSubstColors

*%EFIFlags *EFSeparations Command|Impose|Rerip|Spooler
*%EFIGroup *EFSeparations FPColorWise/Color
*OpenUI *EFSeparations/Combine Separations:Boolean
*OrderDependency: 40.0 Prolog *EFSeparations
*DefaultEFSeparations: False
*EFSeparations False/Off: " userdict /XJXsetSeparations known
  { 0 XJXsetSeparations } if "
*End
*EFSeparations True/On: " userdict /XJXsetSeparations known
  { 1 XJXsetSeparations } if "
*End
*CloseUI: *EFSeparations

*%EFIFlags *EFTrapping ColorSetup|Command|Impose|Rerip|Spooler
*%EFIGroup *EFTrapping FPColorWise/Color
*OpenUI *EFTrapping/Auto Trapping:PickOne
*OrderDependency: 58.4 AnySetup *EFTrapping
*DefaultEFTrapping: EFTrappingDEF
*EFTrapping EFTrappingDEF/Printer's default: ""
*EFTrapping False/Off: " userdict /XJXDoACSTrapping known { false XJXDoACSTrapping } if "
*EFTrapping True/On: " userdict /XJXDoACSTrapping known { true XJXDoACSTrapping } if "
*CloseUI: *EFTrapping

*%EFIFlags *EFOutputOrder Column|Command|Impose|Spooler
*%EFIGroup *EFOutputOrder FPFinishing/Finishing
*OpenUI *EFOutputOrder/Page Order:PickOne
*OrderDependency: 12.0 AnySetup *EFOutputOrder
*DefaultEFOutputOrder: Forward
*EFOutputOrder Forward/Forward: " userdict /XJXsetprintorder known { 0 XJXsetprintorder } if "
*EFOutputOrder Reverse/Reverse: " userdict /XJXsetprintorder known { 1 XJXsetprintorder } if "
*CloseUI: *EFOutputOrder

*%EFIFlags *EFSort Column|Command|Impose|Spooler
*%EFIGroup *EFSort FPFinishing/Finishing
*OpenUI *EFSort/Sorter Mode:PickOne
*OrderDependency: 40.0 AnySetup *EFSort
*DefaultEFSort: False
*EFSort False/Off: " /XJXsetcollate where { pop false XJXsetcollate } if
/XJXsetsorter where { pop 0 XJXsetsorter } if "
*End
*EFSort Collate/Collate without shift: " /XJXsetcollate where { pop true XJXsetcollate } if
/XJXsetsorter where { pop 3 XJXsetsorter } if "
*End
*EFSort Group/Group without shift: " /XJXsetcollate where { pop false XJXsetcollate } if
/XJXsetsorter where { pop 2 XJXsetsorter } if "
*End
*EFSort CrossCollate/Cross-Collate: " /XJXsetcollate where { pop true XJXsetcollate } if
/XJXsetsorter where { pop 5 XJXsetsorter } if "
*End
*EFSort CrossGroup/Cross-Group: " /XJXsetcollate where { pop false XJXsetcollate } if
/XJXsetsorter where { pop 4 XJXsetsorter } if "
*End
*EFSort CollateWithShift/Collate: " /XJXsetcollate where { pop true XJXsetcollate } if
/XJXsetsorter where { pop 7 XJXsetsorter } if "
*End
*EFSort GroupWithShift/Group: " /XJXsetcollate where { pop false XJXsetcollate } if
/XJXsetsorter where { pop 8 XJXsetsorter } if "
*End
*CloseUI: *EFSort

*%EFIFlags *EFOutputBin Command|Impose|Spooler
*%EFIGroup *EFOutputBin FPFinishing/Finishing
*OpenUI *EFOutputBin/Paper Output:PickOne
*OrderDependency: 50.0 AnySetup *EFOutputBin
*DefaultEFOutputBin: AutoSelect
*EFOutputBin AutoSelect/Auto: "
/XJXsetOutputBinV2 where { pop 99 XJXsetOutputBinV2 } if "
*End
*EFOutputBin Outbin2/Tray A (UPPER): "
/XJXsetOutputBinV2 where { pop 5 XJXsetOutputBinV2 } if "
*End
*EFOutputBin Outbin9/Tray B (MIDDLE): "
/XJXsetOutputBinV2 where { pop 12 XJXsetOutputBinV2 } if "
*End
*EFOutputBin Outbin11/Tray C (LOWER): "
/XJXsetOutputBinV2 where { pop 14 XJXsetOutputBinV2 } if "
*End
*CloseUI: *EFOutputBin

*%EFIFlags *EFImageAlign Column|Command|Impose|Rerip|Spooler
*%EFIGroup *EFImageAlign FPFinishing/Finishing
*OpenUI *EFImageAlign/Align front and back images:Boolean
*OrderDependency: 40.0 AnySetup *EFImageAlign
*DefaultEFImageAlign: False
*EFImageAlign False/Off: " userdict /XJXImageShiftAlign known { false XJXImageShiftAlign } if "
*EFImageAlign True/On: " userdict /XJXImageShiftAlign known { true XJXImageShiftAlign } if "
*CloseUI: *EFImageAlign

*%EFIFlags *EFImageUnit Column|Command|Impose|Rerip|Spooler
*%EFIGroup *EFImageUnit FPFinishing/Finishing
*OpenUI *EFImageUnit/Units:PickOne
*OrderDependency: 54.0 AnySetup *EFImageUnit
*DefaultEFImageUnit: MM
*EFImageUnit MM/mm: ""
*EFImageUnit Inches/inches: ""
*EFImageUnit Points/points: ""
*CloseUI: *EFImageUnit

*%EFIFlags *EFImageFlag Column|Command|Impose|Rerip|Spooler
*%EFIGroup *EFImageFlag FPFinishing/Finishing
*OpenUI *EFImageFlag/Image Shift:Boolean
*OrderDependency: 40.0 AnySetup *EFImageFlag
*DefaultEFImageFlag: False
*EFImageFlag False/Off: " userdict /XJXEFIsetpageproperties known
{ << /XJXImageShiftFlag [ false ] >> XJXEFIsetpageproperties }
{ userdict /XJXImageShiftFlag known { false XJXImageShiftFlag } if } ifelse "
*End
*EFImageFlag True/On: " userdict /XJXEFIsetpageproperties known
{ << /XJXImageShiftFlag [ true ] >> XJXEFIsetpageproperties }
{ userdict /XJXImageShiftFlag known { true XJXImageShiftFlag } if } ifelse "
*End
*CloseUI: *EFImageFlag

*%EFIFlags *EFStapler Spooler|Command|Column|Impose
*%EFIGroup *EFStapler FPFinishing/Finishing
*OpenUI *EFStapler/Stapler Mode:PickOne
*OrderDependency: 49.0 AnySetup *EFStapler
*DefaultEFStapler: None
*EFStapler None/Off: "
   /XJXsetstaple where { pop 0 XJXsetstaple } if "
*End
*EFStapler U1LeftP/Corner (Upper Left-P): "
   /XJXsetstaple where { pop 1 XJXsetstaple } if "
*End
*EFStapler U1LeftL/Corner (Upper Left-L): "
   /XJXsetstaple where { pop 1 XJXsetstaple } if "
*End
*EFStapler U1RightP/Corner (Upper Right-P): "
   /XJXsetstaple where { pop 2 XJXsetstaple } if "
*End
*EFStapler U1RightL/Corner (Upper Right-L): "
   /XJXsetstaple where { pop 2 XJXsetstaple } if "
*End
*EFStapler U2TopP/Double (Top-P): "
   /XJXsetstaple where { pop 5 XJXsetstaple } if "
*End
*EFStapler U2TopL/Double (Top-L): "
   /XJXsetstaple where { pop 5 XJXsetstaple } if "
*End
*EFStapler U2LeftP/Double (Left-P): "
   /XJXsetstaple where { pop 3 XJXsetstaple } if "
*End
*EFStapler U2LeftL/Double (Left-L): "
   /XJXsetstaple where { pop 3 XJXsetstaple } if "
*End
*EFStapler U2RightP/Double (Right-P): "
   /XJXsetstaple where { pop 4 XJXsetstaple } if "
*End
*EFStapler U2RightL/Double (Right-L): "
   /XJXsetstaple where { pop 4 XJXsetstaple } if "
*End
*EFStapler UStitch/Saddle Stitch: "
   /XJXsetstaple where { pop 14 XJXsetstaple } if "
*End
*CloseUI: *EFStapler

*%EFIFlags *EFPunch Spooler|Command|Column|Impose
*%EFIGroup *EFPunch FPFinishing/Finishing
*OpenUI *EFPunch/Hole Punch:PickOne
*OrderDependency: 56.0 AnySetup *EFPunch
*DefaultEFPunch: None
*EFPunch None/Off: "
   /XJXsetpunch where { pop 0 XJXsetpunch } if "
*End
*EFPunch TopP/Top-Portrait: "
   /XJXsetpunch where { pop 3 XJXsetpunch } if "
*End
*EFPunch TopL/Top-Landscape: "
   /XJXsetpunch where { pop 3 XJXsetpunch } if "
*End
*EFPunch LeftP/Left-Portrait: "
   /XJXsetpunch where { pop 2 XJXsetpunch } if "
*End
*EFPunch LeftL/Left-Landscape: "
   /XJXsetpunch where { pop 2 XJXsetpunch } if "
*End
*EFPunch RightP/Right-Portrait: "
   /XJXsetpunch where { pop 4 XJXsetpunch } if "
*End
*EFPunch RightL/Right-Landscape: "
   /XJXsetpunch where { pop 4 XJXsetpunch } if "
*End
*CloseUI: *EFPunch

*%EFIFlags *EFImageSmooth Command|Impose|Rerip|Spooler
*%EFIGroup *EFImageSmooth FPImage/Image
*OpenUI *EFImageSmooth/Image Smoothing:PickOne
*OrderDependency: 62.0 AnySetup *EFImageSmooth
*DefaultEFImageSmooth: False
*EFImageSmooth False/Off: "  userdict /XJXSetImageSmooth known 
  { 0 XJXSetImageSmooth } if "
*End
*EFImageSmooth True/On: " userdict /XJXSetImageSmooth known 
  { 2 XJXSetImageSmooth } if "
*End
*EFImageSmooth Auto/Automatic: " userdict /XJXSetImageSmooth known 
  { 1 XJXSetImageSmooth } if "
*End
*CloseUI: *EFImageSmooth

*%EFIFlags *EFBrightness Command|Impose|Rerip|Spooler
*%EFIGroup *EFBrightness FPImage/Image
*OpenUI *EFBrightness/Brightness:PickOne
*OrderDependency: 55.0 AnySetup *EFBrightness
*DefaultEFBrightness: 00.00
*EFBrightness +0.24/85% Lightest: " /XJXsetBrightness where
  { pop (LIGHTEST) XJXsetBrightness } if "
*End
*EFBrightness +0.16/90% Lighter: " /XJXsetBrightness where
  { pop (LIGHTER) XJXsetBrightness } if "
*End
*EFBrightness +0.08/95% Light: " /XJXsetBrightness where
  { pop (LIGHT) XJXsetBrightness } if "
*End
*EFBrightness 00.00/100% Normal: " /XJXsetBrightness where
  { pop (NORMAL) XJXsetBrightness } if "
*End
*EFBrightness -0.08/105% Dark: " /XJXsetBrightness where
  { pop (DARK) XJXsetBrightness } if "
*End
*EFBrightness -0.16/110% Darker: " /XJXsetBrightness where
  { pop (DARKER) XJXsetBrightness } if "
*End
*EFBrightness -0.24/115% Darkest: " /XJXsetBrightness where
  { pop (DARKEST) XJXsetBrightness } if "
*End
*CloseUI: *EFBrightness

*%EFIFlags *EFAdvSmooth Column|Command|Impose|Rerip|Spooler
*%EFIGroup *EFAdvSmooth FPImage/Image
*OpenUI *EFAdvSmooth/Advanced Smoothing:PickOne
*OrderDependency: 50.0 AnySetup *EFAdvSmooth
*DefaultEFAdvSmooth: EFAdvSmoothDEF
*EFAdvSmooth EFAdvSmoothDEF/Printer's default: ""
*EFAdvSmooth Smooth1/Smooth1: " userdict /XJXsetEngAdvSmooth known { (Smooth1) XJXsetEngAdvSmooth } if "
*EFAdvSmooth Smooth2/Smooth2: " userdict /XJXsetEngAdvSmooth known { (Smooth2) XJXsetEngAdvSmooth } if "
*EFAdvSmooth Off/Off: " userdict /XJXsetEngAdvSmooth known { (Off) XJXsetEngAdvSmooth } if "
*?EFAdvSmooth: " userdict /XJXGetEngAdvSmooth  known {
   userdict /XJXGetEngAdvSmooth get exec
   dup 7 eq { 7 {pop} repeat } { 1 ne { (Unknown) } if } ifelse 
} { (Unknown) } ifelse
= flush "
*End
*CloseUI: *EFAdvSmooth

*%EFIFlags *EFCompRatio Column|Command|Impose|Spooler
*%EFIGroup *EFCompRatio FPImage/Image
*OpenUI *EFCompRatio/Image Compression:PickOne
*OrderDependency: 50.0 AnySetup *EFCompRatio
*DefaultEFCompRatio: EFCompRatioDEF
*EFCompRatio EFCompRatioDEF/Printer's default: ""
*EFCompRatio Quality/Image Priority: " userdict /XJXsetEngCompressionRatio known { (Quality) XJXsetEngCompressionRatio } if "
*EFCompRatio Standard/Normal: " userdict /XJXsetEngCompressionRatio known { (Standard) XJXsetEngCompressionRatio } if "
*EFCompRatio Performance/Speed Priority: " userdict /XJXsetEngCompressionRatio known { (Performance) XJXsetEngCompressionRatio } if "
*CloseUI: *EFCompRatio

*%EFIFlags *EFCopierMode Column|Command|Impose|Spooler
*%EFIGroup *EFCopierMode FPImage/Image
*OpenUI *EFCopierMode/Printer's Halftone:PickOne
*OrderDependency: 40.0 AnySetup *EFCopierMode
*DefaultEFCopierMode: EFCopierModeDEF
*EFCopierMode EFCopierModeDEF/Printer's default: " "
*EFCopierMode Standard/Standard: " userdict /XJXsetmapmode known
{ 30 XJXsetmapmode } if "
*End
*EFCopierMode Resolution/Resolution: " userdict /XJXsetmapmode known
{ 31 XJXsetmapmode } if "
*End
*EFCopierMode Gradation/Gradation: " userdict /XJXsetmapmode known
{ 32 XJXsetmapmode } if "
*End
*EFCopierMode ErrorDiffusion/Error Diffusion: " userdict /XJXsetmapmode known
{12 XJXsetmapmode } if "
*End
*EFCopierMode Pattern1/Pattern 1: " userdict /XJXsetmapmode known
{ 33 XJXsetmapmode } if "
*End
*EFCopierMode Pattern2/Pattern 2: " userdict /XJXsetmapmode known
{ 34 XJXsetmapmode } if "
*End
*EFCopierMode Pattern3/Pattern 3: " userdict /XJXsetmapmode known
{ 35 XJXsetmapmode } if "
*End
*EFCopierMode Pattern4/Pattern 4: " userdict /XJXsetmapmode known
{ 36 XJXsetmapmode } if "
*End
*EFCopierMode Pattern5/Pattern 5: " userdict /XJXsetmapmode known
{ 37 XJXsetmapmode } if "
*End
*EFCopierMode Pattern6/Pattern 6: " userdict /XJXsetmapmode known
{ 38 XJXsetmapmode } if "
*End
*EFCopierMode Pattern7/Pattern 7: " userdict /XJXsetmapmode known
{ 39 XJXsetmapmode } if "
*End
*CloseUI: *EFCopierMode

*%EFIFlags *EFDensFineAdj Column|Command|Impose|Spooler
*%EFIGroup *EFDensFineAdj FPImage/Image
*OpenUI *EFDensFineAdj/Density Fine Adjustment:PickOne
*OrderDependency: 50.0 AnySetup *EFDensFineAdj
*DefaultEFDensFineAdj: EFDensFineAdjDEF
*EFDensFineAdj EFDensFineAdjDEF/Printer's default: ""
*EFDensFineAdj Lighter/Lighter: " userdict /XJXsetEngDensFineAdj known { (Lighter) XJXsetEngDensFineAdj } if "
*EFDensFineAdj Light/Light: " userdict /XJXsetEngDensFineAdj known { (Light) XJXsetEngDensFineAdj } if "
*EFDensFineAdj Normal/Normal: " userdict /XJXsetEngDensFineAdj known { (Normal) XJXsetEngDensFineAdj } if "
*EFDensFineAdj Dark/Dark: " userdict /XJXsetEngDensFineAdj known { (Dark) XJXsetEngDensFineAdj } if "
*EFDensFineAdj Darker/Darker: " userdict /XJXsetEngDensFineAdj known { (Darker) XJXsetEngDensFineAdj } if "
*?EFDensFineAdj: " userdict /XJXGetEngDensFineAj known {
   userdict /XJXGetEngDensFineAj get exec
   dup 7 eq { 7 {pop} repeat } { 1 ne { (Unknown) } if } ifelse 
} { (Unknown) } ifelse
= flush "
*End
*CloseUI: *EFDensFineAdj

*%EFIFlags *EFHTScreen Column|Command|Impose|Rerip|Spooler
*%EFIGroup *EFHTScreen FPImage/Image
*OpenUI *EFHTScreen/Halftone Simulation:PickOne
*OrderDependency: 52.0 AnySetup *EFHTScreen
*DefaultEFHTScreen: EFHTScreenDEF
*EFHTScreen EFHTScreenDEF/Printer's default: " "
*EFHTScreen Contone/Printer's Halftone: " userdict /XJXSetHalftone known  
{ (Contone) XJXSetHalftone } if "
*End
*EFHTScreen AppDef/Application Defined: " userdict /XJXSetHalftone known  
{ (AppDef) XJXSetHalftone } if "
*End
*EFHTScreen Newsprint/Newsprint: " userdict /XJXSetHalftone known  
{ (Newsprint) XJXSetHalftone } if "
*End
*EFHTScreen Screen1/User Defined Screen1: " userdict /XJXSetHalftone known  
{ (Screen1) XJXSetHalftone } if "
*End
*EFHTScreen Screen2/User Defined Screen2: " userdict /XJXSetHalftone known  
{ (Screen2) XJXSetHalftone } if "
*End
*EFHTScreen Screen3/User Defined Screen3: " userdict /XJXSetHalftone known  
{ (Screen3) XJXSetHalftone } if "
*End
*?EFHTScreen: " userdict /XJXGetHalftone known {
   userdict /XJXGetHalftone get exec
   dup 7 eq { 7 {pop} repeat } { 1 ne { (Unknown) } if } ifelse 
} { (Unknown) } ifelse
= flush "
*End
*CloseUI: *EFHTScreen

*%EFIFlags *EFNoiseSource Column|Command|Impose|Rerip|Spooler
*%EFIGroup *EFNoiseSource FPImage/Image
*OpenUI *EFNoiseSource/Gradation Smoothing:PickOne
*OrderDependency: 70.0 AnySetup *EFNoiseSource
*DefaultEFNoiseSource: EFNoiseSourceDEF
*EFNoiseSource EFNoiseSourceDEF/Printer's default: ""
*EFNoiseSource False/Off: " userdict /XJXsetNoiseSource known
  { 0 XJXsetNoiseSource } if "
*End
*EFNoiseSource Adjustment-1/Fine: " userdict /XJXsetNoiseSource known
{ 2 XJXsetNoiseSource } if "
*End
*EFNoiseSource Adjustment-2/Coarse: " userdict /XJXsetNoiseSource known
{ 1 XJXsetNoiseSource } if "
*End
*CloseUI: *EFNoiseSource

*%EFIFlags *EFSharpness Column|Command|Impose|Spooler
*%EFIGroup *EFSharpness FPImage/Image
*OpenUI *EFSharpness/Sharpness:PickOne
*OrderDependency: 40.0 AnySetup *EFSharpness
*DefaultEFSharpness: EFSharpnessDEF
*EFSharpness EFSharpnessDEF/Printer's default: ""
*EFSharpness Sharpest/Sharpest: " userdict /XJXsharpness known
{ 3 XJXsharpness } if "
*End
*EFSharpness Sharper/Sharper: " userdict /XJXsharpness known
{ 4 XJXsharpness } if "
*End
*EFSharpness Sharp/Sharp: " userdict /XJXsharpness known
{ 5 XJXsharpness } if "
*End
*EFSharpness Normal/Normal: " userdict /XJXsharpness known
{ 2 XJXsharpness } if "
*End
*EFSharpness None/None: " userdict /XJXsharpness known
{ 0 XJXsharpness } if "
*End
*EFSharpness Soft/Soft: " userdict /XJXsharpness known
{ 6 XJXsharpness } if "
*End
*EFSharpness Softer/Softer: " userdict /XJXsharpness known
{ 1 XJXsharpness } if "
*End
*?EFSharpness: " userdict /XJXsharpness known
{ 0 XJXsharpness } if "
*End
*CloseUI: *EFSharpness

*%EFIFlags *EFTextGfxQual Command|Impose
*%EFIGroup *EFTextGfxQual FPImage/Image
*OpenUI *EFTextGfxQual/Text/Graphics Quality:PickOne
*OrderDependency: 21.0 AnySetup *EFTextGfxQual
*DefaultEFTextGfxQual: Normal
*EFTextGfxQual Normal/Normal: " /XJXsetTextGraphicsQuality where { pop (Normal) XJXsetTextGraphicsQuality } if "
*EFTextGfxQual Best/Best: " /XJXsetTextGraphicsQuality where { pop (Best) XJXsetTextGraphicsQuality } if "
*CloseUI: *EFTextGfxQual

*%EFIFlags *EFTonerSave Column|Command|Impose|Spooler
*%EFIGroup *EFTonerSave FPImage/Image
*OpenUI *EFTonerSave/Toner Saving:PickOne
*OrderDependency: 50.0 AnySetup *EFTonerSave
*DefaultEFTonerSave: EFTonerSaveDEF
*EFTonerSave EFTonerSaveDEF/Printer's default: " "
*EFTonerSave False/Off: " /XJXsetTonerSave where { pop 0 XJXsetTonerSave } if "
*EFTonerSave Level1/On: " /XJXsetTonerSave where { pop 1 XJXsetTonerSave } if "
*CloseUI: *EFTonerSave

*%EFIFlags *EFColorLineCtrl Column|Command|Impose|Rerip|Setup|Spooler
*%EFIGroup *EFColorLineCtrl FPImage/Image
*OpenUI *EFColorLineCtrl/Color Graphics/Line Control:PickOne
*OrderDependency: 50.0 AnySetup *EFColorLineCtrl
*DefaultEFColorLineCtrl: EFColorLineCtrlDEF
*EFColorLineCtrl EFColorLineCtrlDEF/Printer's default: ""
*EFColorLineCtrl Off/Prioritize Resolution: " userdict /XJXSetTonerReductionGraphicsAsText known
   {  (ON) XJXSetTonerReductionGraphicsAsText } if "
*End
*EFColorLineCtrl On/Prioritize Color: " userdict /XJXSetTonerReductionGraphicsAsText known
   { (OFF)  XJXSetTonerReductionGraphicsAsText} if "
*End
*CloseUI: *EFColorLineCtrl

*%EFIFlags *EFResolution Command|Impose|Rerip|Setup|Spooler
*%EFIGroup *EFResolution FPImage/Image
*OpenUI *EFResolution/Resolution:PickOne
*OrderDependency: 12.0 AnySetup *EFResolution
*DefaultEFResolution: EFResolutionDEF
*EFResolution EFResolutionDEF/Printer's default: ""
*EFResolution 600x600dpi/600dpi: " /XJXsetresolution where { pop ([600 600]) XJXsetresolution } if "
*EFResolution 1200x1200dpi/1200dpi: " /XJXsetresolution where { pop ([1200 1200]) XJXsetresolution } if "
*?EFResolution: "
save
    initgraphics
    0 0 moveto currentpoint matrix defaultmatrix transform
  0 72 lineto currentpoint matrix defaultmatrix transform
  3 -1 roll sub dup mul
  3 1 roll exch sub dup mul
  add sqrt round cvi
  10 string cvs print (dpi) = flush
restore "
*End
*CloseUI: *EFResolution

*%EFIFlags *EFControlBar Command|Impose|Rerip|Spooler
*%EFIGroup *EFControlBar FPJobInfo/Job Info
*OpenUI *EFControlBar/Control Bar:PickOne
*OrderDependency: 58.4 AnySetup *EFControlBar
*DefaultEFControlBar: EFControlBarDEF
*EFControlBar EFControlBarDEF/Printer's default: ""
*EFControlBar False/Off: " userdict /XJXsetControlBar known 
{ false XJXsetControlBar } if "
*End
*EFControlBar True/On: " userdict /XJXsetControlBar known 
{ true XJXsetControlBar } if "
*End
*CloseUI: *EFControlBar

*%EFIFlags *EFRaster Column|Impose|Rerip|Spooler
*%EFIGroup *EFRaster FPJobInfo/Job Info
*OpenUI *EFRaster/Print Queue Action:PickOne
*OrderDependency: 65.0 AnySetup *EFRaster
*DefaultEFRaster: False
*EFRaster False/Print: " userdict /XJXsetraster known { 0 XJXsetraster } if "
*EFRaster True/Print and Hold: " userdict /XJXsetraster known { 1 XJXsetraster } if "
*EFRaster RipNHold/Process and Hold: " userdict /XJXsetraster known { 2 XJXsetraster } if "
*CloseUI: *EFRaster

*%EFIFlags *EFPostFlight Command|Impose|Rerip|Spooler
*%EFIGroup *EFPostFlight FPJobInfo/Job Info
*OpenUI *EFPostFlight/Postflight:PickOne
*OrderDependency: 62.0 AnySetup *EFPostFlight
*DefaultEFPostFlight: False
*EFPostFlight False/Off: " /XJXSetPostFlight where { pop 0 XJXSetPostFlight } if "
*EFPostFlight ReportVerbose/Detailed Report Only: " /XJXSetPostFlight where { pop 25 XJXSetPostFlight } if "
*EFPostFlight ReportConcise/Concise Report Only: " /XJXSetPostFlight where { pop 9 XJXSetPostFlight } if "
*EFPostFlight TestPage/Test Page Only: " /XJXSetPostFlight where { pop 5 XJXSetPostFlight } if "
*EFPostFlight ColorCodedJob/Color-Coded Pages Only: " /XJXSetPostFlight where { pop 3 XJXSetPostFlight } if "
*EFPostFlight All/All Components: " /XJXSetPostFlight where { pop 31 XJXSetPostFlight } if "
*CloseUI: *EFPostFlight

*%EFIFlags *EFProgressives Command|Rerip|Spooler
*%EFIGroup *EFProgressives FPJobInfo/Job Info
*OpenUI *EFProgressives/Progressives:Boolean
*OrderDependency: 58.4 AnySetup *EFProgressives
*DefaultEFProgressives: False
*EFProgressives False/Off: " userdict /XJXsetProgressives known
{ (Off) XJXsetProgressives } if "
*End
*EFProgressives True/On: " userdict /XJXsetProgressives known
{ (On) XJXsetProgressives } if "
*End
*CloseUI: *EFProgressives


*%EFIFlags *EFNoAccountBW Column|Command|Spooler
*%EFIGroup *EFNoAccountBW FPJobInfo/Job Info
*OpenUI *EFNoAccountBW/Do Not Use Job Accounting for B&W Printing:Boolean
*OrderDependency: 50.0 AnySetup *EFNoAccountBW
*DefaultEFNoAccountBW: False
*EFNoAccountBW False/Off: " userdict /XJXSetPrinterinfo known { (FORCEMONOCHROME) (FALSE) XJXSetPrinterinfo } if "
*EFNoAccountBW True/On: " userdict /XJXSetPrinterinfo known { (FORCEMONOCHROME) (TRUE) XJXSetPrinterinfo } if "
*CloseUI: *EFNoAccountBW

*%EFIFlags *EFCaliPaper Impose|Setup
*%EFIGroup *EFCaliPaper FPJobInfo/Job Info
*OpenUI *EFCaliPaper/Calibration Paper:PickOne
*OrderDependency: 50.0 AnySetup *EFCaliPaper
*DefaultEFCaliPaper: EUCAL
*EFCaliPaper EUCAL/Neusiedler 100gsm: ""
*EFCaliPaper JPCAL/Canon CLC 80gsm: ""
*EFCaliPaper USCAL/Hammermill 28lb: ""
*CloseUI: *EFCaliPaper

*%EFIFlags *EFCourierSubst Setup
*%EFIGroup *EFCourierSubst FPJobInfo/Job Info
*OpenUI *EFCourierSubst/Allow Courier Substitution:PickOne
*OrderDependency: 35.0 AnySetup *EFCourierSubst
*DefaultEFCourierSubst: YES
*EFCourierSubst NO/No: ""
*EFCourierSubst YES/Yes: ""
*CloseUI: *EFCourierSubst

*%EFIFlags *EFPSError Impose|Setup
*%EFIGroup *EFPSError FPJobInfo/Job Info
*OpenUI *EFPSError/Print to PS Error:PickOne
*OrderDependency: 40.0 AnySetup *EFPSError
*DefaultEFPSError: NO
*EFPSError NO/No: ""
*EFPSError YES/Yes: ""
*CloseUI: *EFPSError

*%EFIFlags *Duplex Column|Command|Rerip|Spooler|MixedMedia|MMCover
*%EFIGroup *Duplex FPLayout/Layout
*OpenUI *Duplex/2-sided Printing:PickOne
*OrderDependency: 50.0 AnySetup *Duplex
*DefaultDuplex: None
*Duplex None/Off: " userdict /XJXEFIsetpageproperties known 
  { << /XJXsetduplex [ false ] >> XJXEFIsetpageproperties }
  { userdict /XJXsetduplex known
    { false XJXsetduplex } { << /Duplex false >> setpagedevice } ifelse
  } ifelse "
*End
*Duplex DuplexNoTumble/Long Edge Binding: " userdict /XJXEFIsetpageproperties known
  { << /XJXsetduplex [ true ] /XJXSetBinding [ (long) ] >> XJXEFIsetpageproperties }
  { userdict /XJXsetduplex known
    { true XJXsetduplex } { << /Duplex true >> setpagedevice } ifelse
    userdict /XJXSetBinding known { (long) XJXSetBinding } if
  } ifelse "
*End
*Duplex DuplexTumble/Short Edge Binding: " userdict /XJXEFIsetpageproperties known
  { << /XJXsetduplex [ true ] /XJXSetBinding [ (short) ] >> XJXEFIsetpageproperties }
  { userdict /XJXsetduplex known
    { true XJXsetduplex } { << /Duplex true >> setpagedevice } ifelse
    userdict /XJXSetBinding known { (short) XJXSetBinding } if
  } ifelse "
*End
*CloseUI: *Duplex

*%EFIFlags *EFEngRotate180 Column|Command|Rerip|Spooler
*%EFIGroup *EFEngRotate180 FPLayout/Layout
*OpenUI *EFEngRotate180/Rotate 180:PickOne
*OrderDependency: 50.0 AnySetup *EFEngRotate180
*DefaultEFEngRotate180: False
*EFEngRotate180 False/Off: " /XJXsetEngineRotate180 where { pop 0 XJXsetEngineRotate180 } if "
*EFEngRotate180 True/On: " /XJXsetEngineRotate180 where { pop 1 XJXsetEngineRotate180 } if "
*EFEngRotate180 LargePaperOnly/Large Paper Only: " /XJXsetEngineRotate180 where { pop 2 XJXsetEngineRotate180 } if "
*CloseUI: *EFEngRotate180

*%EFIFlags *EFCopierBooklet Column|Command|Rerip|Spooler
*%EFIGroup *EFCopierBooklet FPLayout/Layout
*OpenUI *EFCopierBooklet/Booklet:PickOne
*OrderDependency: 50.0 AnySetup *EFCopierBooklet
*DefaultEFCopierBooklet: False
*EFCopierBooklet False/Off: " /XJXsetbooklet where { pop 0 XJXsetbooklet } if "
*EFCopierBooklet LeftBinding/On: " /XJXsetbooklet where { pop 1 XJXsetbooklet } if "
*EFCopierBooklet LeftBindingLegal/On (use Legal Paper): "
   /XJXsetPrintSize where { pop (LEFStatement) XJXsetPrintSize } if
   /XJXSetAutoScale where { pop true XJXSetAutoScale } if
   /XJXsetBookletLegal where { pop true XJXsetBookletLegal } if
   /XJXsetbooklet where { pop 1 XJXsetbooklet } if "
*End
*EFCopierBooklet HalfLeftBinding/Reduced: "
   /XJXSetHalfPageSize where { pop true XJXSetHalfPageSize } if
   /XJXsetbooklet where { pop 1 XJXsetbooklet } if "
*End
*EFCopierBooklet HalfLeftBindingLegal/Reduced (use Legal Paper): "
   /XJXsetBookletLegal where { pop true XJXsetBookletLegal } if
   /XJXSetHalfPageSize where { pop true XJXSetHalfPageSize } if
   /XJXsetbooklet where { pop 1 XJXsetbooklet } if "
*End
*CloseUI: *EFCopierBooklet

*%EFIFlags *EFUseCreepCorr Column|Command|Spooler
*%EFIGroup *EFUseCreepCorr FPLayout/Layout
*OpenUI *EFUseCreepCorr/Use Creep Correction:PickOne
*OrderDependency: 50.0 AnySetup *EFUseCreepCorr
*DefaultEFUseCreepCorr: Off
*EFUseCreepCorr Off/Off: " userdict /XJXsetEngUseCreepCorrection known { (Off) XJXsetEngUseCreepCorrection } if "
*EFUseCreepCorr Device/Apply Device Settings: " userdict /XJXsetEngUseCreepCorrection known { (Device) XJXsetEngUseCreepCorrection } if "
*EFUseCreepCorr Automatic/Automatic Correction: " userdict /XJXsetEngUseCreepCorrection known { (Automatic) XJXsetEngUseCreepCorrection } if "
*EFUseCreepCorr Manual/Manual Correction: " userdict /XJXsetEngUseCreepCorrection known { (Manual) XJXsetEngUseCreepCorrection } if "
*CloseUI: *EFUseCreepCorr

*%EFIFlags *EFConvPaperSize Impose|Setup
*%EFIGroup *EFConvPaperSize FPLayout/Layout
*OpenUI *EFConvPaperSize/Convert Paper Sizes:PickOne
*OrderDependency: 25.0 AnySetup *EFConvPaperSize
*DefaultEFConvPaperSize: False
*EFConvPaperSize False/No: ""
*EFConvPaperSize LetterToA4/Letter/Tabloid->A4/A3: ""
*EFConvPaperSize A4ToLetter/A4/A3->Letter/Tabloid: ""
*CloseUI: *EFConvPaperSize

*%EFIFlags *EFMediaType Column|Command|Impose|Rerip|Spooler|MediaKey|MixedMedia|MMCover|MMInsertion
*%EFIGroup *EFMediaType FPPaperSource/Media
*OpenUI *EFMediaType/Media Type:PickOne
*OrderDependency: 50.0 AnySetup *EFMediaType
*DefaultEFMediaType: Any
*EFMediaType Any/Any Media Type: "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 199 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 199 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Thin/Thin (64-79 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 230 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 230 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Plain/Plain (80-105 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 0 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 0 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Heavy1/Heavy 1 (106-128 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 240 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 240 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Heavy2/Heavy 2 (129-150 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 300 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 300 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Heavy3/Heavy 3 (151-180 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 233 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 233 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Heavy4/Heavy 4 (181-209 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 234 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 234 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Heavy5/Heavy 5 (210-256 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 235 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 235 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Recycled1/Recycled 1 (64-79 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 236 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 236 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Recycled2/Recycled 2 (80-105 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 237 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 237 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Recycled3/Recycled 3 (151-180 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 238 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 238 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Recycled4/Recycled 4 (210-256 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 239 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 239 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Color/Color (64-79 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 106 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 106 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Prepunched1/Pre-punched 1 (64-79 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 302 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 302 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Prepunched2/Pre-punched 2 (80-105 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 241 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 241 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Bond/Bond Paper: "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 1 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 1 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Transparency/Transparency: "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 4 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 4 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Labels/Labels: "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 104 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 104 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Tabpaper1/Tab Paper 1 (151-180 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 242 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 242 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Tabpaper2/Tab Paper 2 (181-209 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 243 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 243 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType OneSidedCoated1/1-Sided Coated 1 (106-128 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 244 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 244 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType OneSidedCoated2/1-Sided Coated 2 (129-150 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 245 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 245 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType OneSidedCoated3/1-Sided Coated 3 (151-180 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 246 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 246 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType OneSidedCoated4/1-Sided Coated 4 (181-209 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 247 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 247 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType OneSidedCoated5/1-Sided Coated 5 (210-256 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 248 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 248 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType TwoSidedCoated1/2-Sided Coated 1 (106-128 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 270 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 270 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType TwoSidedCoated2/2-Sided Coated 2 (129-150 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 263 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 263 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType TwoSidedCoated3/2-Sided Coated 3 (151-180 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 264 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 264 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType TwoSidedCoated4/2-Sided Coated 4 (181-209 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 265 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 265 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType TwoSidedCoated5/2-Sided Coated 5 (210-256 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 266 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 266 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType TexturePaper1/Texture Paper 1 (80-105 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 250 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 250 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType TexturePaper2/Texture Paper 2 (106-128 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 251 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 251 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType TexturePaper3/Texture Paper 3 (129-150 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 252 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 252 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType TexturePaper4/Texture Paper 4 (151-180 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 253 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 253 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType TexturePaper5/Texture Paper 5 (181-209 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 254 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 254 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType TexturePaper6/Texture Paper 6 (210-256 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 255 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 255 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Vellum1/Vellum 1 (80-105 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 256 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 256 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Vellum2/Vellum 2 (106-128 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 257 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 257 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Recycled5/(Recycled) (106-128g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 267 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 267 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Recycled6/(Recycled) (129-150 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 268 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 268 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Recycled7/(Recycled) (181-209 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 269 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 269 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Texture/(Texture Paper) (64-79 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 231 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 231 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Vellum3/(Vellum) (64-79 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 258 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 258 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Vellum4/(Vellum) (129-150 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 259 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 259 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Vellum5/(Vellum) (151-180 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 260 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 260 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Vellum6/(Vellum) (181-209 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 261 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 261 XJXsetmediatypeV2 } if
} ifelse"
*End
*EFMediaType Vellum7/(Vellum) (210-256 g/m2): "
userdict /XJXEFIsetpageproperties known
{  << /XJXsetmediatypeV2 [ 262 ] >> XJXEFIsetpageproperties  }
{  userdict /XJXsetmediatypeV2 known
{ 262 XJXsetmediatypeV2 } if
} ifelse"
*End
*?EFMediaType: "/XJGetPrinterInfo where { pop (mediatype) XJGetPrinterInfo == } if"
*CloseUI: *EFMediaType

*%EFIFlags *InputSlot Column|Command|Impose|Spooler|MixedMedia|MMInsertion
*%EFIGroup *InputSlot FPPaperSource/Media
*OpenUI *InputSlot/Paper Source:PickOne
*OrderDependency: 20.0 AnySetup *InputSlot
*DefaultInputSlot: AutoSelect
*InputSlot AutoSelect/Auto Tray Select: "
userdict /XJXEFIsetpageproperties known
{ << /XJXsettrayselV2 [ 7 ] >> XJXEFIsetpageproperties }
{ /XJXsettrayselV2 where
{ pop 7 XJXsettrayselV2 } if
} ifelse"
*End
*InputSlot ManualFeed/Stack Bypass: "
userdict /XJXEFIsetpageproperties known
{ << /XJXsettrayselV2 [ 2 ] >> XJXEFIsetpageproperties }
{ /XJXsettrayselV2 where
{ pop 2 XJXsettrayselV2 } if
} ifelse"
*End
*InputSlot Tray1/Drawer1: "
userdict /XJXEFIsetpageproperties known
{ << /XJXsettrayselV2 [ 1 ] >> XJXEFIsetpageproperties }
{ /XJXsettrayselV2 where
{ pop 1 XJXsettrayselV2 } if
} ifelse"
*End
*InputSlot Tray2/Drawer2: "
userdict /XJXEFIsetpageproperties known
{ << /XJXsettrayselV2 [ 4 ] >> XJXEFIsetpageproperties }
{ /XJXsettrayselV2 where
{ pop 4 XJXsettrayselV2 } if
} ifelse"
*End
*InputSlot Tray3/Drawer3: "
userdict /XJXEFIsetpageproperties known
{ << /XJXsettrayselV2 [ 5 ] >> XJXEFIsetpageproperties }
{ /XJXsettrayselV2 where
{ pop 5 XJXsettrayselV2 } if
} ifelse"
*End
*InputSlot Tray4/Drawer4: "
userdict /XJXEFIsetpageproperties known
{ << /XJXsettrayselV2 [ 20 ] >> XJXEFIsetpageproperties }
{ /XJXsettrayselV2 where
{ pop 20 XJXsettrayselV2 } if
} ifelse"
*End
*InputSlot Tray5/Paper Deck-AA1: "
userdict /XJXEFIsetpageproperties known
{ << /XJXsettrayselV2 [ 21 ] >> XJXEFIsetpageproperties }
{ /XJXsettrayselV2 where
{ pop 21 XJXsettrayselV2 } if
} ifelse"
*End
*InputSlot Tray6/Paper Deck-AB1: "
userdict /XJXEFIsetpageproperties known
{ << /XJXsettrayselV2 [ 22 ] >> XJXEFIsetpageproperties }
{ /XJXsettrayselV2 where
{ pop 22 XJXsettrayselV2 } if
} ifelse"
*End
*CloseUI: *InputSlot

*%EFIFlags *EFTrayAlignment Column|Command|Impose|Rerip|Spooler
*%EFIGroup *EFTrayAlignment FPPaperSource/Media
*OpenUI *EFTrayAlignment/Tray Alignment:Boolean
*OrderDependency: 60.0 AnySetup *EFTrayAlignment
*DefaultEFTrayAlignment: False
*EFTrayAlignment False/Disable: "/XJXUseTrayAlignment where { pop false XJXUseTrayAlignment } if "
*EFTrayAlignment True/Enable: "/XJXUseTrayAlignment where { pop true XJXUseTrayAlignment } if "
*CloseUI: *EFTrayAlignment

*%EFIFlags *EFCover Command|Rerip|Spooler
*%EFIGroup *EFCover FPPaperSource/Media
*OpenUI *EFCover/Front Cover Mode:PickOne
*OrderDependency: 50.0 AnySetup *EFCover
*DefaultEFCover: False
*EFCover False/None: " /XJXsetfrontcoverV2 where { pop (Off) XJXsetfrontcoverV2 } if "
*EFCover Blank/Blank Page: " /XJXsetfrontcoverV2 where { pop (Blank) XJXsetfrontcoverV2 } if "
*EFCover Side1/Front Page Print: " /XJXsetfrontcoverV2 where { pop (Simplex) XJXsetfrontcoverV2 } if "
*EFCover Side2/Back Page Print: " /XJXsetfrontcoverV2 where { pop (Simplex2) XJXsetfrontcoverV2 } if "
*EFCover Both/Both Page Print: " /XJXsetfrontcoverV2 where { pop (Duplex) XJXsetfrontcoverV2 } if "
*CloseUI: *EFCover

*%EFIFlags *EFCoverTray Command|Rerip|Spooler
*%EFIGroup *EFCoverTray FPPaperSource/Media
*OpenUI *EFCoverTray/Front Cover Source:PickOne
*OrderDependency: 20.0 AnySetup *EFCoverTray
*DefaultEFCoverTray: ManualFeed
*EFCoverTray ManualFeed/Stack Bypass: " /XJXsetFirstPageTrayV2 where
{ pop 2 XJXsetFirstPageTrayV2 } if "
*End
*EFCoverTray Tray1/Drawer 1: " /XJXsetFirstPageTrayV2 where
{ pop 1 XJXsetFirstPageTrayV2 } if "
*End
*EFCoverTray Tray2/Drawer 2: " /XJXsetFirstPageTrayV2 where
{ pop 4 XJXsetFirstPageTrayV2 } if "
*End
*EFCoverTray Tray3/Drawer 3: " /XJXsetFirstPageTrayV2 where
{ pop 5 XJXsetFirstPageTrayV2 } if "
*End
*EFCoverTray Tray4/Drawer 4: " /XJXsetFirstPageTrayV2 where
{ pop 20 XJXsetFirstPageTrayV2 } if "
*End
*EFCoverTray Tray5/Paper Deck-AA1: " /XJXsetFirstPageTrayV2 where
{ pop 21 XJXsetFirstPageTrayV2 } if "
*End
*EFCoverTray Tray6/Paper Deck-AB1: " /XJXsetFirstPageTrayV2 where
{ pop 22 XJXsetFirstPageTrayV2 } if "
*End
*CloseUI: *EFCoverTray

*%EFIFlags *EFBkCover Command|Rerip|Spooler
*%EFIGroup *EFBkCover FPPaperSource/Media
*OpenUI *EFBkCover/Back Cover Mode:PickOne
*OrderDependency: 50.0 AnySetup *EFBkCover
*DefaultEFBkCover: False
*EFBkCover False/None: " /XJXsetbackcover where { pop (Off) XJXsetbackcover } if "
*EFBkCover Blank/Blank Page: " /XJXsetbackcover where { pop (Blank) XJXsetbackcover } if "
*EFBkCover Side1/Front Page Print: " /XJXsetbackcover where { pop (Simplex) XJXsetbackcover } if "
*EFBkCover Side2/Back Page Print: " /XJXsetbackcover where { pop (Simplex2) XJXsetbackcover } if "
*EFBkCover Both/Both Page Print: " /XJXsetbackcover where { pop (Duplex) XJXsetbackcover } if "
*CloseUI: *EFBkCover

*%EFIFlags *EFBkCoverTray Command|Rerip|Spooler
*%EFIGroup *EFBkCoverTray FPPaperSource/Media
*OpenUI *EFBkCoverTray/Back Cover Source:PickOne
*OrderDependency: 20.0 AnySetup *EFBkCoverTray
*DefaultEFBkCoverTray: ManualFeed
*EFBkCoverTray ManualFeed/Stack Bypass: " /XJXsetBackCoverTray where
{ pop 2 XJXsetBackCoverTray} if "
*End
*EFBkCoverTray Tray1/Drawer 1: " /XJXsetBackCoverTray where
{ pop 1 XJXsetBackCoverTray } if "
*End
*EFBkCoverTray Tray2/Drawer 2: " /XJXsetBackCoverTray where
{ pop 4 XJXsetBackCoverTray } if "
*End
*EFBkCoverTray Tray3/Drawer 3: " /XJXsetBackCoverTray where
{ pop 5 XJXsetBackCoverTray } if "
*End
*EFBkCoverTray Tray4/Drawer 4: " /XJXsetBackCoverTray where
{ pop 20 XJXsetBackCoverTray } if "
*End
*EFBkCoverTray Tray5/Paper Deck-AA1: " /XJXsetBackCoverTray where
{ pop 21 XJXsetBackCoverTray } if "
*End
*EFBkCoverTray Tray6/Paper Deck-AB1: " /XJXsetBackCoverTray where
{ pop 22 XJXsetBackCoverTray } if "
*End
*CloseUI: *EFBkCoverTray

*%EFIFlags *EFMediaInterlv Column|Command|Spooler
*%EFIGroup *EFMediaInterlv FPPaperSource/Media
*OpenUI *EFMediaInterlv/Transparency Interleaving:PickOne
*OrderDependency: 50.0 AnySetup *EFMediaInterlv
*DefaultEFMediaInterlv: False
*EFMediaInterlv False/Off: " userdict /XJXsetTransInterleave known { 0 XJXsetTransInterleave } if "
*EFMediaInterlv Blank/Blank Interleave: " userdict /XJXsetTransInterleave known { 1 XJXsetTransInterleave } if "
*EFMediaInterlv Printed/Printed Interleave: " userdict /XJXsetTransInterleave known { 2 XJXsetTransInterleave } if "
*CloseUI: *EFMediaInterlv

*%EFIFlags *EFDefPaperSize Impose|Setup
*%EFIGroup *EFDefPaperSize FPPaperSource/Media
*OpenUI *EFDefPaperSize/Default Paper Sizes:PickOne
*OrderDependency: 20.0 AnySetup *EFDefPaperSize
*DefaultEFDefPaperSize: Metric
*EFDefPaperSize US/US: ""
*EFDefPaperSize Metric/Metric: ""
*CloseUI: *EFDefPaperSize

*%EFIFlags *EFPrintCover Setup
*%EFIGroup *EFPrintCover FPPaperSource/Media
*OpenUI *EFPrintCover/Print Cover Page:PickOne
*OrderDependency: 30.0 AnySetup *EFPrintCover
*DefaultEFPrintCover: False
*EFPrintCover False/No: ""
*EFPrintCover BeforeJob/Yes: ""
*CloseUI: *EFPrintCover

*%EFIFlags *EFCopyNumMode Column|Command
*%EFIGroup *EFCopyNumMode FPStamping/Stamping
*OpenUI *EFCopyNumMode/Copy Set Numbering:PickOne
*OrderDependency: 65.0 AnySetup *EFCopyNumMode
*DefaultEFCopyNumMode: None
*EFCopyNumMode None/Off: " /XJXsetSerialNumberMode where { pop 1 XJXsetSerialNumberMode } if "
*EFCopyNumMode Auto/On: " /XJXsetSerialNumberMode where { pop 2 XJXsetSerialNumberMode } if "
*CloseUI: *EFCopyNumMode

*%EFIFlags *EFCreateMaster Column|Command|Impose|Rerip|Spooler
*%EFIGroup *EFCreateMaster FPVDP/VDP
*OpenUI *EFCreateMaster/Create Master:PickOne
*OrderDependency: 57.0 AnySetup *EFCreateMaster
*DefaultEFCreateMaster: None
*EFCreateMaster None/None: " /XJXCreateMaster where { pop 0 XJXCreateMaster } if "
*EFCreateMaster formC1/1: " /XJXCreateMaster where { pop 1 XJXCreateMaster } if "
*EFCreateMaster formC2/2: " /XJXCreateMaster where { pop 2 XJXCreateMaster } if "
*EFCreateMaster formC3/3: " /XJXCreateMaster where { pop 3 XJXCreateMaster } if "
*EFCreateMaster formC4/4: " /XJXCreateMaster where { pop 4 XJXCreateMaster } if "
*EFCreateMaster formC5/5: " /XJXCreateMaster where { pop 5 XJXCreateMaster } if "
*EFCreateMaster formC6/6: " /XJXCreateMaster where { pop 6 XJXCreateMaster } if "
*EFCreateMaster formC7/7: " /XJXCreateMaster where { pop 7 XJXCreateMaster } if "
*EFCreateMaster formC8/8: " /XJXCreateMaster where { pop 8 XJXCreateMaster } if "
*EFCreateMaster formC9/9: " /XJXCreateMaster where { pop 9 XJXCreateMaster } if "
*EFCreateMaster formC10/10: " /XJXCreateMaster where { pop 10 XJXCreateMaster } if "
*EFCreateMaster formC11/11: " /XJXCreateMaster where { pop 11 XJXCreateMaster } if "
*EFCreateMaster formC12/12: " /XJXCreateMaster where { pop 12 XJXCreateMaster } if "
*EFCreateMaster formC13/13: " /XJXCreateMaster where { pop 13 XJXCreateMaster } if "
*EFCreateMaster formC14/14: " /XJXCreateMaster where { pop 14 XJXCreateMaster } if "
*EFCreateMaster formC15/15: " /XJXCreateMaster where { pop 15 XJXCreateMaster } if "
*CloseUI: *EFCreateMaster

*%EFIFlags *EFUseMaster Column|Command|Impose|Rerip|Spooler
*%EFIGroup *EFUseMaster FPVDP/VDP
*OpenUI *EFUseMaster/Use Master:PickOne
*OrderDependency: 57.0 AnySetup *EFUseMaster
*DefaultEFUseMaster: None
*EFUseMaster None/None: " /XJXUseMaster where { pop 0 XJXUseMaster } if "
*EFUseMaster formU1/1: " /XJXUseMaster where { pop 1 XJXUseMaster } if "
*EFUseMaster formU2/2: " /XJXUseMaster where { pop 2 XJXUseMaster } if "
*EFUseMaster formU3/3: " /XJXUseMaster where { pop 3 XJXUseMaster } if "
*EFUseMaster formU4/4: " /XJXUseMaster where { pop 4 XJXUseMaster } if "
*EFUseMaster formU5/5: " /XJXUseMaster where { pop 5 XJXUseMaster } if "
*EFUseMaster formU6/6: " /XJXUseMaster where { pop 6 XJXUseMaster } if "
*EFUseMaster formU7/7: " /XJXUseMaster where { pop 7 XJXUseMaster } if "
*EFUseMaster formU8/8: " /XJXUseMaster where { pop 8 XJXUseMaster } if "
*EFUseMaster formU9/9: " /XJXUseMaster where { pop 9 XJXUseMaster } if "
*EFUseMaster formU10/10: " /XJXUseMaster where { pop 10 XJXUseMaster } if "
*EFUseMaster formU11/11: " /XJXUseMaster where { pop 11 XJXUseMaster } if "
*EFUseMaster formU12/12: " /XJXUseMaster where { pop 12 XJXUseMaster } if "
*EFUseMaster formU13/13: " /XJXUseMaster where { pop 13 XJXUseMaster } if "
*EFUseMaster formU14/14: " /XJXUseMaster where { pop 14 XJXUseMaster } if "
*EFUseMaster formU15/15: " /XJXUseMaster where { pop 15 XJXUseMaster } if "
*CloseUI: *EFUseMaster

*%EFIFlags *EFPPTSlide Column|Command|Rerip|Spooler
*%EFIGroup *EFPPTSlide FPVDP/VDP
*OpenUI *EFPPTSlide/Remove White PPT Background:Boolean
*OrderDependency: 58.0 AnySetup *EFPPTSlide
*DefaultEFPPTSlide: False
*EFPPTSlide False/No: " userdict /XJXKeepPPTBackground known { XJXKeepPPTBackground } if "
*EFPPTSlide True/Yes: " userdict /XJXRemovePPTBackground known { XJXRemovePPTBackground } if "
*CloseUI: *EFPPTSlide

*%EFIFlags *EFPrintMaster Column|Command|Impose|Rerip|Setup|Spooler
*%EFIGroup *EFPrintMaster FPVDP/VDP
*OpenUI *EFPrintMaster/Print Master:PickOne
*OrderDependency: 57.0 AnySetup *EFPrintMaster
*DefaultEFPrintMaster: EFPrintMasterDEF
*EFPrintMaster EFPrintMasterDEF/Printer's default: " "
*EFPrintMaster False/Off: " /XJXFFMPrint where { pop false XJXFFMPrint } if "
*EFPrintMaster True/On: " /XJXFFMPrint where { pop true XJXFFMPrint } if "
*CloseUI: *EFPrintMaster

*% ========== Media Selection ==========

*%EFIFlags *PageSize Column|Command|Rerip|MediaKey|MixedMedia|MMCover|MMInsertion
*%EFIGroup *PageSize FPPaperSource/Media
*OpenUI *PageSize/Paper Size:PickOne
*OrderDependency: 90.0 AnySetup *PageSize
*DefaultPageSize: A4
*PageSize A3/A3: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFA3) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (SEFA3) XJXsetpagesize } { << /PageSize [843 1191] >> setpagedevice } ifelse } ifelse "
*End
*PageSize B4/B4: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFB4) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (SEFB4) XJXsetpagesize } { << /PageSize [727 1031] >> setpagedevice } ifelse } ifelse "
*End
*PageSize A4/A4: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFA4) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (LEFA4) XJXsetpagesize } { << /PageSize [595 843] >> setpagedevice } ifelse } ifelse "
*End
*PageSize B5/B5: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFB5) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (LEFB5) XJXsetpagesize } { << /PageSize [517 730] >> setpagedevice } ifelse } ifelse "
*End
*PageSize A5/A5: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFA5) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (LEFA5) XJXsetpagesize } { << /PageSize [420 596] >> setpagedevice } ifelse } ifelse "
*End
*PageSize Tabloid/11x17: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFTabloid) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (SEFTabloid) XJXsetpagesize } { << /PageSize [792 1224] >> setpagedevice } ifelse } ifelse "
*End
*PageSize Legal/Legal: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFLegal) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (SEFLegal) XJXsetpagesize } { << /PageSize [612 1008] >> setpagedevice } ifelse } ifelse "
*End
*PageSize Letter/Letter: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFLetter) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (LEFLetter) XJXsetpagesize } { << /PageSize [612 792] >> setpagedevice } ifelse } ifelse "
*End
*PageSize Statement/Statement: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFStatement) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (LEFStatement) XJXsetpagesize } { << /PageSize [396 612] >> setpagedevice } ifelse } ifelse "
*End
*PageSize SRA3/SRA3: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFSRA3) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (SEFSRA3) XJXsetpagesize } { << /PageSize [907 1275] >> setpagedevice } ifelse } ifelse "
*End
*PageSize TabloidExtra/12x18: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFARCHB) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (SEFARCHB) XJXsetpagesize } { << /PageSize [864 1296] >> setpagedevice } ifelse } ifelse "
*End
*PageSize Executive/Executive: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFExecutive) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (LEFExecutive) XJXsetpagesize } { << /PageSize [522 756] >> setpagedevice } ifelse } ifelse "
*End
*PageSize 13x19/13x19: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEF13x19) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (SEF13x19) XJXsetpagesize } { << /PageSize [936 1368] >> setpagedevice } ifelse } ifelse "
*End
*?PageSize: " FieryXJdict /PageSizeQuery get exec = flush "
*CloseUI: *PageSize

*OpenUI *PageRegion:PickOne
*OrderDependency: 95.0 AnySetup *PageRegion
*DefaultPageRegion: A4
*PageRegion A3/A3: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFA3) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (SEFA3) XJXsetpagesize } { << /PageSize [843 1191] >> setpagedevice } ifelse } ifelse "
*End
*PageRegion B4/B4: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFB4) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (SEFB4) XJXsetpagesize } { << /PageSize [727 1031] >> setpagedevice } ifelse } ifelse "
*End
*PageRegion A4/A4: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFA4) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (LEFA4) XJXsetpagesize } { << /PageSize [595 843] >> setpagedevice } ifelse } ifelse "
*End
*PageRegion B5/B5: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFB5) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (LEFB5) XJXsetpagesize } { << /PageSize [517 730] >> setpagedevice } ifelse } ifelse "
*End
*PageRegion A5/A5: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFA5) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (LEFA5) XJXsetpagesize } { << /PageSize [420 596] >> setpagedevice } ifelse } ifelse "
*End
*PageRegion Tabloid/11x17: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFTabloid) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (SEFTabloid) XJXsetpagesize } { << /PageSize [792 1224] >> setpagedevice } ifelse } ifelse "
*End
*PageRegion Legal/Legal: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFLegal) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (SEFLegal) XJXsetpagesize } { << /PageSize [612 1008] >> setpagedevice } ifelse } ifelse "
*End
*PageRegion Letter/Letter: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFLetter) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (LEFLetter) XJXsetpagesize } { << /PageSize [612 792] >> setpagedevice } ifelse } ifelse "
*End
*PageRegion Statement/Statement: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFStatement) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (LEFStatement) XJXsetpagesize } { << /PageSize [396 612] >> setpagedevice } ifelse } ifelse "
*End
*PageRegion SRA3/SRA3: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFSRA3) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (SEFSRA3) XJXsetpagesize } { << /PageSize [907 1275] >> setpagedevice } ifelse } ifelse "
*End
*PageRegion TabloidExtra/12x18: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFARCHB) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (SEFARCHB) XJXsetpagesize } { << /PageSize [864 1296] >> setpagedevice } ifelse } ifelse "
*End
*PageRegion Executive/Executive: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFExecutive) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (LEFExecutive) XJXsetpagesize } { << /PageSize [522 756] >> setpagedevice } ifelse } ifelse "
*End
*PageRegion 13x19/13x19: " userdict /XJXEFIsetpageproperties known
{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEF13x19) ] >> XJXEFIsetpageproperties }
{ /XJXSetImageable where { pop () XJXSetImageable } if
  /XJXsetpagesize where { pop (SEF13x19) XJXsetpagesize } { << /PageSize [936 1368] >> setpagedevice } ifelse } ifelse "
*End
*CloseUI: *PageRegion 

*DefaultImageableArea: A4
*ImageableArea A3/A3: "7.08 11.3 834.9 1179.7"
*ImageableArea B4/B4: "7.08 11.3 721.9 1020.7"
*ImageableArea A4/A4: "11.3 11.3 583.7 830.7"
*ImageableArea B5/B5: "11.3 11.3 504.7 717.7"
*ImageableArea A5/A5: "11.3 11.3 408.7 583.7"
*ImageableArea Tabloid/11x17: "7.08 11.3 784.9 1212.7"
*ImageableArea Legal/Legal: "7.08 11.3 604.9 996.7"
*ImageableArea Letter/Letter: "11.3 11.3 600.7 780.7"
*ImageableArea Statement/Statement: "11.3 11.3 384.7 600.7"
*ImageableArea SRA3/SRA3: "7.08 11.3 899.9 1263.7"
*ImageableArea TabloidExtra/12x18: "7.08 11.3 856.9 1284.7"
*ImageableArea Executive/Executive: "11.3 11.3 510.7 744.7"
*ImageableArea 13x19/13x19: "21.26 22.68 914.74 1345.32"
*?ImageableArea: "save /cvp { cvi 12 string cvs print ( ) print } bind def
newpath clippath pathbbox
4 -2 roll exch 2 {ceiling cvp} repeat
exch 2 {floor cvp} repeat flush
restore"
*End

*DefaultPaperDimension: A4
*PaperDimension A3/A3: "842.0 1191.0"
*PaperDimension B4/B4: "729.0 1032.0"
*PaperDimension A4/A4: "595.0 842.0"
*PaperDimension B5/B5: "516.0 729.0"
*PaperDimension A5/A5: "420.0 595.0"
*PaperDimension Tabloid/11x17: "792.0 1224.0"
*PaperDimension Legal/Legal: "612.0 1008.0"
*PaperDimension Letter/Letter: "612.0 792.0"
*PaperDimension Statement/Statement: "396.0 612.0"
*PaperDimension SRA3/SRA3: "907.0 1275.0"
*PaperDimension TabloidExtra/12x18: "864.0 1296.0"
*PaperDimension Executive/Executive: "522.0 756.0"
*PaperDimension 13x19/13x19: "936.0 1368.0"

*% ========== Halftone Information ==========

*ScreenAngle: "0"
*ScreenFreq: "66.0"
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"
*DefaultTransfer: Null

*% ========== Custom Pagesize ==========

*LeadingEdge Short: " "
*LeadingEdge Long: " "
*LeadingEdge PreferLong: " "
*DefaultLeadingEdge: PreferLong
*NonUIOrderDependency: 90.0 AnySetup *CustomPageSize
*ParamCustomPageSize Width: 1 points 72.0 935.43 
*ParamCustomPageSize Height: 2 points 72.0 1785.83 
*ParamCustomPageSize WidthOffset: 3 points 0 0 
*ParamCustomPageSize HeightOffset: 4 points 0 0 
*ParamCustomPageSize Orientation: 5 int 0 3 
*CustomPageSize True: "
   /XJXsetpagesize where { pop XJXsetpagesize }
    { 3 1 roll pop pop dup 0 eq exch 2 eq or { exch } if
      2 array astore << /PageSize 3 -1 roll >>
   setpagedevice } ifelse "
*End
*HWMargins: 7.09 11.34 7.09 11.34
*MaxMediaWidth: "935.43"
*MaxMediaHeight: "1785.83"
*CenterRegistered: False

*% ========== Font Information ==========

*DefaultFont: Courier

*Font AdobeSansMM: Standard "(001.000)" Standard ROM
*Font AdobeSerifMM: Standard "(001.001)" Standard ROM
*Font AlbertusMT: Standard "(001.000)" Standard Disk
*Font AlbertusMT-Italic: Standard "(001.000)" Standard Disk
*Font AlbertusMT-Light: Standard "(001.000)" Standard Disk
*Font AntiqueOlive-Bold: Standard "(001.001)" Standard Disk
*Font AntiqueOlive-Compact: Standard "(001.001)" Standard Disk
*Font AntiqueOlive-Italic: Standard "(001.001)" Standard Disk
*Font AntiqueOlive-Roman: Standard "(001.001)" Standard Disk
*Font Apple-Chancery: Standard "(2.0)" Standard Disk
*Font Arial-BoldItalicMT: Standard "(MS core font:v2.00)" Standard Disk
*Font Arial-BoldMT: Standard "(MS core font :V2.00)" Standard Disk
*Font Arial-ItalicMT: Standard "(MS core font:V2.00)" Standard Disk
*Font ArialMT: Standard "(MS core font:V2.00)" Standard Disk
*Font AvantGarde-Book: Standard "(002.000)" ExtendedRoman Disk
*Font AvantGarde-BookOblique: Standard "(002.000)" ExtendedRoman Disk
*Font AvantGarde-Demi: Standard "(002.000)" ExtendedRoman Disk
*Font AvantGarde-DemiOblique: Standard "(002.000)" ExtendedRoman Disk
*Font Bodoni: Standard "(001.002)" Standard Disk
*Font Bodoni-Bold: Standard "(001.002)" Standard Disk
*Font Bodoni-BoldItalic: Standard "(001.002)" Standard Disk
*Font Bodoni-Italic: Standard "(001.002)" Standard Disk
*Font Bodoni-Poster: Standard "(001.002)" Standard Disk
*Font Bodoni-PosterCompressed: Standard "(001.001)" Standard Disk
*Font Bookman-Demi: Standard "(002.000)" ExtendedRoman Disk
*Font Bookman-DemiItalic: Standard "(002.000)" ExtendedRoman Disk
*Font Bookman-Light: Standard "(002.000)" ExtendedRoman Disk
*Font Bookman-LightItalic: Standard "(002.000)" ExtendedRoman Disk
*Font Carta: Special "(001.001)" Special Disk
*Font Chicago: Standard "(2.0)" Standard Disk
*Font Clarendon: Standard "(001.001)" Standard Disk
*Font Clarendon-Bold: Standard "(001.001)" Standard Disk
*Font Clarendon-Light: Standard "(001.001)" Standard Disk
*Font CooperBlack: Standard "(001.003)" Standard Disk
*Font CooperBlack-Italic: Standard "(001.003)" Standard Disk
*Font Copperplate-ThirtyThreeBC: Standard "(001.002)" Standard Disk
*Font Copperplate-ThirtyTwoBC: Standard "(001.002)" Standard Disk
*Font Coronet-Regular: Standard "(001.000)" ExtendedRoman Disk
*Font Courier: Standard "(003.000)" ExtendedRoman Disk
*Font Courier-Bold: Standard "(003.000)" ExtendedRoman Disk
*Font Courier-BoldOblique: Standard "(003.000)" ExtendedRoman Disk
*Font Courier-Oblique: Standard "(003.000)" ExtendedRoman Disk
*Font Eurostile: Standard "(001.002)" Standard Disk
*Font Eurostile-Bold: Standard "(001.001)" Standard Disk
*Font Eurostile-BoldExtendedTwo: Standard "(001.002)" Standard Disk
*Font Eurostile-ExtendedTwo: Standard "(001.002)" Standard Disk
*Font Geneva: Standard "(2.0)" Standard Disk
*Font GillSans: Standard "(001.002)" Standard Disk
*Font GillSans-Bold: Standard "(001.001)" Standard Disk
*Font GillSans-BoldCondensed: Standard "(001.001)" Standard Disk
*Font GillSans-BoldItalic: Standard "(001.002)" Standard Disk
*Font GillSans-Condensed: Standard "(001.001)" Standard Disk
*Font GillSans-ExtraBold: Standard "(001.001)" Standard Disk
*Font GillSans-Italic: Standard "(001.002)" Standard Disk
*Font GillSans-Light: Standard "(001.001)" Standard Disk
*Font GillSans-LightItalic: Standard "(001.002)" Standard Disk
*Font Goudy: Standard "(001.003)" Standard Disk
*Font Goudy-Bold: Standard "(001.002)" Standard Disk
*Font Goudy-BoldItalic: Standard "(001.002)" Standard Disk
*Font Goudy-ExtraBold: Standard "(001.001)" Standard Disk
*Font Goudy-Italic: Standard "(001.002)" Standard Disk
*Font Helvetica: Standard "(002.000)" ExtendedRoman Disk
*Font Helvetica-Bold: Standard "(002.000)" ExtendedRoman Disk
*Font Helvetica-BoldOblique: Standard "(002.000)" ExtendedRoman Disk
*Font Helvetica-Condensed: Standard "(002.000)" ExtendedRoman Disk
*Font Helvetica-Condensed-Bold: Standard "(002.000)" ExtendedRoman Disk
*Font Helvetica-Condensed-BoldObl: Standard "(002.000)" ExtendedRoman Disk
*Font Helvetica-Condensed-Oblique: Standard "(002.000)" ExtendedRoman Disk
*Font Helvetica-Narrow: Standard "(002.000)" ExtendedRoman ROM
*Font Helvetica-Narrow-Bold: Standard "(002.000)" ExtendedRoman ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(002.000)" ExtendedRoman ROM
*Font Helvetica-Narrow-Oblique: Standard "(002.000)" ExtendedRoman ROM
*Font Helvetica-Oblique: Standard "(002.000)" ExtendedRoman Disk
*Font HoeflerText-Black: Standard "(2.0)" Standard Disk
*Font HoeflerText-BlackItalic: Standard "(2.0)" Standard Disk
*Font HoeflerText-Italic: Standard "(2.0)" Standard Disk
*Font HoeflerText-Ornaments: Special "(2.0)" Special Disk
*Font HoeflerText-Regular: Standard "(2.0)" Standard Disk
*Font JoannaMT: Standard "(001.000)" Standard Disk
*Font JoannaMT-Bold: Standard "(001.000)" Standard Disk
*Font JoannaMT-BoldItalic: Standard "(001.000)" Standard Disk
*Font JoannaMT-Italic: Standard "(001.000)" Standard Disk
*Font LetterGothic: Standard "(001.004)" Standard Disk
*Font LetterGothic-Bold: Standard "(001.006)" Standard Disk
*Font LetterGothic-BoldSlanted: Standard "(001.005)" Standard Disk
*Font LetterGothic-Slanted: Standard "(001.004)" Standard Disk
*Font LubalinGraph-Book: Standard "(001.002)" Standard Disk
*Font LubalinGraph-BookOblique: Standard "(001.002)" Standard Disk
*Font LubalinGraph-Demi: Standard "(001.002)" Standard Disk
*Font LubalinGraph-DemiOblique: Standard "(001.002)" Standard Disk
*Font Marigold: Standard "(001.000)" Standard Disk
*Font Monaco: Standard "(2.0)" Standard Disk
*Font MonaLisa-Recut: Standard "(001.000)" Standard Disk
*Font NewCenturySchlbk-Bold: Standard "(002.000)" ExtendedRoman Disk
*Font NewCenturySchlbk-BoldItalic: Standard "(002.000)" ExtendedRoman Disk
*Font NewCenturySchlbk-Italic: Standard "(002.000)" ExtendedRoman Disk
*Font NewCenturySchlbk-Roman: Standard "(002.000)" ExtendedRoman Disk
*Font NewYork: Standard "(2.0)" Standard Disk
*Font Optima: Standard "(001.005)" Standard Disk
*Font Optima-Bold: Standard "(001.005)" Standard Disk
*Font Optima-BoldItalic: Standard "(001.000)" Standard Disk
*Font Optima-Italic: Standard "(001.000)" Standard Disk
*Font Oxford: Standard "(001.000)" Standard Disk
*Font Palatino-Bold: Standard "(002.000)" ExtendedRoman Disk
*Font Palatino-BoldItalic: Standard "(002.000)" ExtendedRoman Disk
*Font Palatino-Italic: Standard "(002.000)" ExtendedRoman Disk
*Font Palatino-Roman: Standard "(002.000)" ExtendedRoman Disk
*Font StempelGaramond-Bold: Standard "(001.002)" Standard Disk
*Font StempelGaramond-BoldItalic: Standard "(001.002)" Standard Disk
*Font StempelGaramond-Italic: Standard "(001.002)" Standard Disk
*Font StempelGaramond-Roman: Standard "(001.002)" Standard Disk
*Font Symbol: Special "(001.008)" Special Disk
*Font Tekton: Standard "(001.001)" Standard Disk
*Font Times-Bold: Standard "(002.000)" ExtendedRoman Disk
*Font Times-BoldItalic: Standard "(002.000)" ExtendedRoman Disk
*Font Times-Italic: Standard "(002.000)" ExtendedRoman Disk
*Font Times-Roman: Standard "(002.000)" ExtendedRoman Disk
*Font TimesNewRomanPS-BoldItalicMT: Standard "(MS core font:V2.00)" Standard Disk
*Font TimesNewRomanPS-BoldMT: Standard "(MS core font:V2.00)" Standard Disk
*Font TimesNewRomanPS-ItalicMT: Standard "(MS core font:V2.00)" Standard Disk
*Font TimesNewRomanPSMT: Standard "(MS core font:V2.00)" Standard Disk
*Font Univers: Standard "(001.003)" Standard Disk
*Font Univers-Bold: Standard "(001.003)" Standard Disk
*Font Univers-BoldExt: Standard "(001.000)" Standard Disk
*Font Univers-BoldExtObl: Standard "(001.000)" Standard Disk
*Font Univers-BoldOblique: Standard "(001.003)" Standard Disk
*Font Univers-Condensed: Standard "(001.002)" Standard Disk
*Font Univers-CondensedBold: Standard "(001.001)" Standard Disk
*Font Univers-CondensedBoldOblique: Standard "(001.001)" Standard Disk
*Font Univers-CondensedOblique: Standard "(001.002)" Standard Disk
*Font Univers-Extended: Standard "(001.000)" Standard Disk
*Font Univers-ExtendedObl: Standard "(001.000)" Standard Disk
*Font Univers-Light: Standard "(001.003)" Standard Disk
*Font Univers-LightOblique: Standard "(001.003)" Standard Disk
*Font Univers-Oblique: Standard "(001.003)" Standard Disk
*Font Wingdings-Regular: Special "(Version 2.00)" Special Disk
*Font ZapfChancery-MediumItalic: Standard "(002.000)" ExtendedRoman Disk
*Font ZapfDingbats: Special "(002.000)" Special Disk

*?FontQuery: "
save
{ count 1 gt
{ exch dup 212 string cvs (/) print print (:) print
/Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
} { exit } ifelse
} bind loop
(*) = flush
restore"
*End
*?FontList: "
save (*) {cvn ==} 128 string /Font resourceforall
(*) = flush restore"
*End

*% ========== Color Seperation ==========

*DefaultColorSep: Black.100lpi.400dpi

*ColorSepScreenAngle Cyan.100lpi.400dpi: "0"
*ColorSepScreenAngle Magenta.100lpi.400dpi: "0"
*ColorSepScreenAngle Yellow.100lpi.400dpi: "0"
*ColorSepScreenAngle Black.100lpi.400dpi: "0"
*ColorSepScreenFreq Cyan.100lpi.400dpi: "50.0"
*ColorSepScreenFreq Magenta.100lpi.400dpi: "50.0"
*ColorSepScreenFreq Yellow.100lpi.400dpi: "50.0"
*ColorSepScreenFreq Black.100lpi.400dpi: "50.0"
*ColorSepScreenProc Cyan.100lpi.400dpi: "{6 5
   { 3 1 roll 4 -1 roll exch
   {dup 8 ge { 8 sub} if exch
   dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if
   1.0 add 8 2 div mul add dup 8 ge {8 sub} if
   dup 0 lt {0 exch sub} if cvi
   }
   exec 8 mul 3 1 roll exch
   {dup 8 ge { 8 sub} if exch
   dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if
   1.0 add 8 2 div mul add dup 8 ge {8 sub} if
   dup 0 lt {0 exch sub} if cvi
   }
   exec add
   [
   48 18 8 16 46 16 6 14
   56 60 32 24 54 58 30 22
   4 12 44 40 2 10 42 38
   28 20 52 64 26 18 50 62

   45 15 5 13 47 17 7 15
   53 57 29 21 55 59 31 23
   1 9 41 37 3 11 43 39
   25 17 49 61 27 19 51 63
   ]
   exch get 8 dup mul div} exec}"
*End

*ColorSepScreenProc Magenta.100lpi.400dpi: "{4 7
   { 3 1 roll 4 -1 roll exch
   {dup 8 ge { 8 sub} if exch
   dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if
   1.0 add 8 2 div mul add dup 8 ge {8 sub} if
   dup 0 lt {0 exch sub} if cvi
   }
   exec 8 mul 3 1 roll exch
   {dup 8 ge { 8 sub} if exch
   dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if
   1.0 add 8 2 div mul add dup 8 ge {8 sub} if
   dup 0 lt {0 exch sub} if cvi
   }
   exec add
   [
   48 18 8 16 46 16 6 14
   56 60 32 24 54 58 30 22
   4 12 44 40 2 10 42 38
   28 20 52 64 26 18 50 62

   45 15 5 13 47 17 7 15
   53 57 29 21 55 59 31 23
   1 9 41 37 3 11 43 39
   25 17 49 61 27 19 51 63
   ]
   exch get 8 dup mul div} exec}"
*End

*ColorSepScreenProc Yellow.100lpi.400dpi: "{5 2
   { 3 1 roll 4 -1 roll exch
   {dup 8 ge { 8 sub} if exch
   dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if
   1.0 add 8 2 div mul add dup 8 ge {8 sub} if
   dup 0 lt {0 exch sub} if cvi
   }
   exec 8 mul 3 1 roll exch
   {dup 8 ge { 8 sub} if exch
   dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if
   1.0 add 8 2 div mul add dup 8 ge {8 sub} if
   dup 0 lt {0 exch sub} if cvi
   }
   exec add
   [
   48 18 8 16 46 16 6 14
   56 60 32 24 54 58 30 22
   4 12 44 40 2 10 42 38
   28 20 52 64 26 18 50 62

   45 15 5 13 47 17 7 15
   53 57 29 21 55 59 31 23
   1 9 41 37 3 11 43 39
   25 17 49 61 27 19 51 63
   ]
   exch get 8 dup mul div} exec}"
*End

*ColorSepScreenProc Black.100lpi.400dpi: "{2 4
   { 3 1 roll 4 -1 roll exch
   {dup 8 ge { 8 sub} if exch
   dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if
   1.0 add 8 2 div mul add dup 8 ge {8 sub} if
   dup 0 lt {0 exch sub} if cvi
   }
   exec 8 mul 3 1 roll exch
   {dup 8 ge { 8 sub} if exch
   dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if
   1.0 add 8 2 div mul add dup 8 ge {8 sub} if
   dup 0 lt {0 exch sub} if cvi
   }
   exec add
   [
   48 18 8 16 46 16 6 14
   56 60 32 24 54 58 30 22
   4 12 44 40 2 10 42 38
   28 20 52 64 26 18 50 62

   45 15 5 13 47 17 7 15
   53 57 29 21 55 59 31 23
   1 9 41 37 3 11 43 39
   25 17 49 61 27 19 51 63
   ]
   exch get 8 dup mul div} exec}"
*End
*InkName: P300FieryBlue/Fiery Blue
*InkName: P199FieryRed/Fiery Red
*InkName: PblackFieryBlack/Fiery Black
*CustomCMYK P300FieryBlue: ".9 .9 .0 .0"
*CustomCMYK P199FieryRed: ".0 .9 .9 .0"
*CustomCMYK PblackFieryBlack: ".2 .1 .1 .9"

*% ========== Meta Data ==========

*% DATABASE VERSION: 15
*% DATABASE SIZE: 5566464
*% DATABASE IDENTIFICATION: webtool_db.mdb@@\main\231
*% WEBTOOL VERSION: 27
*% TEMPLATE VERSION: 1.4
*% PROJECT ROOT: Canon

*% PPD Last Modified 2006.07.13
*% End of PPD file

